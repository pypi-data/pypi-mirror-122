name: CI

on:
  push:
    branches: [master]
    tags: [v*.*.*]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Run client tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.10'
    - name: Cache packages
      uses: actions/cache@v2.1.6
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-3.8-${{ hashFiles('requirements.txt') }}-${{ hashFiles('setup.py')
          }}
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: requirements.txt
    - name: Lint
      run: |
        echo "::add-matcher::.github/actionlint-matcher.json"
        make lint
      env:
        CI_LINT_RUN: 1
    - name: Run tests
      run: make test
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.0.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: .coverage.xml
        name: client-codecov
  release:
    name: Release client
    runs-on: ubuntu-latest
    needs:
    - test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.10
    - name: Install dependencies
      run: |
        make setup
        python -m pip install twine wheel
    - name: Make dist
      run: |
        python setup.py sdist bdist_wheel
    - name: PyPI upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        TWINE_NON_INTERACTIVE: 1
      run: |
        twine upload dist/*
