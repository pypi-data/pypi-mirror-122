# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['sfdata_annexa_clean',
 'sfdata_annexa_clean.annex_a',
 'sfdata_annexa_clean.annex_a.merger',
 'sfdata_annexa_clean.config',
 'sfdata_annexa_clean.datatables',
 'sfdata_annexa_clean.log',
 'sfdata_annexa_clean.regex']

package_data = \
{'': ['*'], 'sfdata_annexa_clean': ['assets/config/*']}

install_requires = \
['PyYAML>=5.4.1,<6.0.0',
 'XlsxWriter>=3.0.1,<4.0.0',
 'dacite>=1.6.0,<2.0.0',
 'jupyterlab>=3.1.17,<4.0.0',
 'openpyxl>=3.0.9,<4.0.0',
 'pandas>=1.3.3,<2.0.0',
 'xlrd>=2.0.1,<3.0.0']

setup_kwargs = {
    'name': 'sfdata-annexa-clean',
    'version': '0.1.1',
    'description': 'A cleaner module for Annex A Data',
    'long_description': '# Annex A Normaliser\n\nThis code was originally developed by [Celine Gross][cece78], [Chris Owen][chowen94] and [Kaj Siebert][kws] at \n[Social Finance][org-sf] as part of a grant funded programme to support Local \nAuthorities to collaborate on data analysis. The programme was called the ‘Front Door Data Collaboration’. It was \nsupported financially by the Christie Foundation and Nesta (through the ‘What Works Centre for Children’s Social Care’).\nThe LAs whose staff guided its development were Bracknell Forest, West Berkshire, Southampton, and Surrey. \nIt also benefitted from advice from the National Performance and Information Managers Group.\n\nWe are happy to share this code hoping that other data analysts may benefit from a quick way to standardize Annex A to \nconduct more analysis. \n\nYou can find more info about Social Finance on our website: https://www.socialfinance.org.uk/\n\n\n# What is this code about?\n\n**What if you could conduct analysis on a Local Authority\'s Annex A without worrying about cleaning the data first?**\n\nConducting varied pieces of analysis off of Annex A data required us to repeatedly clean the data of typos, \ninconsistencies, incorrect column labels, and many more fun things. We realised that there was value in writing a \n"cleaner" that would standardize the data so that we could get on with the analysis without re-cleaning each time.\n\n\n\n# How to run this programme\n\nTo run this programme, you will need to have installed [Python][python] and [Poetry][poetry]. \n\nOnce that is done, follow the steps detailed below:\n\nIf you have Annex A data:\n- 1. Run the 10-annexa-MERGE step\n- 2. Run the 20-annexa-CLEAN step\n- 3. Run the 30-annexa-CUSTOM_CLEAN step (optional)\n\nYou\'re done!\n\n\n## Step 1: 10-annexa-MERGE\n\nThe 10-annexa-MERGE file uploads all the Annex A files and merges them into a unique one. It also works if you have only one file. In the process, it checks column titles and data type within the columns. This programme will ouput three items:\n- The merged Annex A ("merged.xlsx"): a unique Annex A file\n- The Annex A column report ("column_names.xlsx"): a list of "column_name" from the Annex A guidance matched with the "header_name" found in your file. You may see that some columns were not matched if their titles were not aligned with the Annex A guidance.\n- The Annex A error report: a list of values that were discarded because they didn\'t match the normal column type - e.g. a field with "Yes" where a date was expected. (currently disabled, but will get added in the next version)\n\nTo run this step, open the 10-annexa-MERGE notebook and run all the cells. You can input the path to your Annex A files by:\n1. Giving a list of individual files names:\n```\nsources = find_sources(\'examples/example-A-2005.xls\', \'examples/example-B-2004.xlsx\', data_sources=data_sources)\n```\n2. Giving a \'glob\' pattern to find the files within a folder:\n```\nsources = find_sources(\'examples/example-*.*\', data_sources=data_sources)\n```\nYou can follow the full, step-by-step walk-through of this step in docs/merger-components.ipynb.\n\n\n## Step 2: 20-annexa-CLEAN\n\nThe 20-annexa-CLEAN file goes over the merged Annex A ("merged.xlsx") created in step 10 and aligns the values within the columns with the 2019 Annex A guidance. E.g. \'White British\' (Ethnicity column) will be converted to \'a) WBRI\'. This programme will output two items:\n- The matching report ("matching_report.xlsx"): Excel table showing which original values were matched with Annex A-aligned values. Those that were not matched are shown as \'not matched\'. The matching is done based on generic rules that should work for most users; however, you have the option to custom the matching in the \'custom clean\' step.\n- The cleaned Annex A ("cleaned.xlsx"): new Annex A file with values aligned with the 2019 Annex A guidance. The values that were not matched are replaced by \'not matched\'. You can change this behaviour in the \'custom clean\' step.\n\nTo run this step, open the 20-annexa-CLEAN notebook and run all the cells. You can change the file paths if required.\n\n\n## Step 3: 30-annexa-CUSTOM_CLEAN\n\nThe 30-annexa-CUSTOM_CLEAN step enables you to custom the Annex A cleaning and output a new version of the cleaned Annex A. This programme will output one item:\n- The cleaned Annex A ("final_cleaned.xslx"): new Annex A file including the edits you made in the matching report.\n\nGo ahead and open the matching report ("matching_report.xlsx") generated by 20-CLEAN: you\'ll see that you can change how the original value (\'former_value\' column) is mapped to the Annex A-aligned value (\'new_value\' column). \n\nLet\'s imagine that your data had a row with "Contact Source" : "James Bond". Our generic cleaning rules would not pick that up and you would see the line "James Bond" : "not matched" in the matching report. You can edit this and change it into "James Bond" : "d) 1D: Individual". Do your edits and save the matching report. You\'re ready to go!\n\nTo run this step, open the 30-annexa-CUSTOM_CLEAN notebook and run all the cells. You can change the file paths if required.\n\n\n## Step 4: 40-cincensus-CLEAN\n\nThe 40-cincensus-CLEAN goes over one or several CIN Census files (**XML**) and performs a quick, low-level cleaning. This programme will output one item for each input item:\n- A "cleaned" version of each CIN Census file ("cleaned-{}.xml"): The cleaning consists of removing empty or incomplete tags, removing trailing spaces, checking that date fields are dates, checking that codes used are aligned with the CIN Census guidance. If a field is not of the correct type/code, the code will add a "Not in proper format" mention to the data field. The user can open the clean XML and search for "Not in proper format" and manually edit if needed.\n\nTo run this step, open the 40-cincensus-CLEAN notebook and run all the cells. You need to input the CIN folder filepath.\n\n\n## Step 5: 50-all-LOG\n\nThe 50-all-LOG creates an event-based csv table pulling all the data from Annex A and/or CIN Census. The code can be used to pull together Annex A **and** CIN Census data, but also works with only Annex A or CIN Census. This programme will output one item:\n- The log ("log.csv"): New csv file recaping all the data contained in Annex A and/or CIN Census. \n\nHaving a log file allows to access all the child information in one place and easily access events that occurred.\n\nTo run this step, open the 50-all-LOG notebook and run all the cells. You need to input the cleaned Annex A filepath and the cleaned CIN folder filepath. If you are not using Annex A or CIN Census, you need to change "include_annexa" or "include_cincensus" to **False**.\n\n\n\n# Caveats and assumptions\n\n**Annex A cleaning** - We have focused on providing cleaning rules on the first 8 Annex A lists. If you\'re keen to add additional rules for the remaining lists, please get in touch and we\'d be happy to collaborate.\n\n\n\n# Contributing\n\nThis is our first go at providing some quick code to simplify the analysis of statutory children services data. \nMuch more could be done! If you\'d like to contribute, head over to [CONTRIBUTING.md](CONTRIBUTING.md).\n\n[python]: https://wiki.python.org/moin/BeginnersGuide/Download\n[poetry]: https://python-poetry.org/\n\n[org-sf]: https://www.socialfinance.org.uk/\n\n[cece78]: https://github.com/Cece78\n[chowen94]: https://github.com/chowen94\n[kws]: https://github.com/kws',
    'author': 'Céline Gross',
    'author_email': 'celine.m.gross@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/CSCDP/sfdata-annexa-clean',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.7.1,<4.0',
}


setup(**setup_kwargs)
