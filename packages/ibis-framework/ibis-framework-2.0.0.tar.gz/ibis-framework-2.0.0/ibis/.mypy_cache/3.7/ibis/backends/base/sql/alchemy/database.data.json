{".class": "MypyFile", "_fullname": "ibis.backends.base.sql.alchemy.database", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "AlchemyDatabase": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["ibis.backends.base.client.Database"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabase", "name": "AlchemyDatabase", "type_vars": []}, "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabase", "metaclass_type": null, "metadata": {}, "module_name": "ibis.backends.base.sql.alchemy.database", "mro": ["ibis.backends.base.sql.alchemy.database.AlchemyDatabase", "ibis.backends.base.client.Database", "builtins.object"], "names": {".class": "SymbolTable", "list_tables": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "like", "schema"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabase.list_tables", "name": "list_tables", "type": null}}, "schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "name"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabase.schema", "name": "schema", "type": null}}, "schema_class": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabase.schema_class", "name": "schema_class", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["name", "database"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": ["ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema"], "def_extras": {}, "fallback": "builtins.type", "implicit": true, "is_ellipsis_args": false, "name": null, "ret_type": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema", "variables": []}}}, "table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "name", "schema"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabase.table", "name": "table", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "AlchemyDatabaseSchema": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["ibis.backends.base.client.Database"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema", "name": "AlchemyDatabaseSchema", "type_vars": []}, "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema", "metaclass_type": null, "metadata": {}, "module_name": "ibis.backends.base.sql.alchemy.database", "mro": ["ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema", "ibis.backends.base.client.Database", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "name", "database"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema.__init__", "name": "__init__", "type": null}}, "__repr__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema.__repr__", "name": "__repr__", "type": null}}, "database": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema.database", "name": "database", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "drop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "force"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema.drop", "name": "drop", "type": null}}, "list_tables": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "like"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema.list_tables", "name": "list_tables", "type": null}}, "table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "name"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyDatabaseSchema.table", "name": "table", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "AlchemyTable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["ibis.expr.operations.DatabaseTable"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyTable", "name": "AlchemyTable", "type_vars": []}, "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyTable", "metaclass_type": "ibis.expr.signature.AnnotableMeta", "metadata": {}, "module_name": "ibis.backends.base.sql.alchemy.database", "mro": ["ibis.backends.base.sql.alchemy.database.AlchemyTable", "ibis.expr.operations.DatabaseTable", "ibis.expr.operations.PhysicalTable", "ibis.expr.operations.TableNode", "ibis.expr.operations.Node", "ibis.expr.signature.Annotable", "ibis.expr.schema.HasSchema", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "table", "source", "schema"], "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyTable.__init__", "name": "__init__", "type": null}}, "sqla_table": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "ibis.backends.base.sql.alchemy.database.AlchemyTable.sqla_table", "name": "sqla_table", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Database": {".class": "SymbolTableNode", "cross_ref": "ibis.backends.base.client.Database", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "ibis.backends.base.sql.alchemy.database.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "ibis.backends.base.sql.alchemy.database.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "ibis.backends.base.sql.alchemy.database.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "ibis.backends.base.sql.alchemy.database.__package__", "name": "__package__", "type": "builtins.str"}}, "ops": {".class": "SymbolTableNode", "cross_ref": "ibis.expr.operations", "kind": "Gdef"}, "sch": {".class": "SymbolTableNode", "cross_ref": "ibis.expr.schema", "kind": "Gdef"}}, "path": "backends/base/sql/alchemy/database.py"}