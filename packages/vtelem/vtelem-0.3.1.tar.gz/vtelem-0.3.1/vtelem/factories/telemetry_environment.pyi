from typing import Tuple
from vtelem.channel import Channel as Channel
from vtelem.daemon.command_queue import CommandQueueDaemon as CommandQueueDaemon
from vtelem.telemetry.environment import TelemetryEnvironment as TelemetryEnvironment
from vtelem.types.command_queue_daemon import ResultCbType as ResultCbType

def channel_set(chan: Tuple[Channel, int], cmd: dict, time: float, env: TelemetryEnvironment) -> Tuple[bool, str]: ...
def channel_get(chan: Tuple[Channel, int], _: dict, __: float, env: TelemetryEnvironment) -> Tuple[bool, str]: ...
def channel_increment(chan: Tuple[Channel, int], cmd: dict, time: float, env: TelemetryEnvironment) -> Tuple[bool, str]: ...
def channel_decrement(chan: Tuple[Channel, int], cmd: dict, time: float, env: TelemetryEnvironment) -> Tuple[bool, str]: ...
def create_channel_commander(env: TelemetryEnvironment, daemon: CommandQueueDaemon, result_cb: ResultCbType = ..., command_name: str = ...) -> None: ...
