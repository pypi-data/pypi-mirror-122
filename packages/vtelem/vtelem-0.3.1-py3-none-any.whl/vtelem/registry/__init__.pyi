from typing import Any, List, Optional, Tuple, TypeVar
from vtelem.classes.serdes import DEFAULT_INDENT as DEFAULT_INDENT

TYP = TypeVar('TYP')

class Registry:
    type_name: Any
    data: Any
    curr_id: int
    lock: Any
    def __init__(self, type_name: str, initial_data: List[Tuple[str, TYP]] = ...) -> None: ...
    def count(self) -> int: ...
    def get_item(self, item_id: int) -> Optional[TYP]: ...
    def get_id(self, name: str) -> Optional[int]: ...
    def add(self, name: str, data: TYP) -> Tuple[bool, int]: ...
    def describe(self, indented: bool = ...) -> str: ...
    def describe_raw(self, indented: bool = ..., cls: Any = ...) -> str: ...
