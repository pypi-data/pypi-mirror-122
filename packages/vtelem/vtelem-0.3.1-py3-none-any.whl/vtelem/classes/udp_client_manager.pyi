from .time_entity import LockEntity as LockEntity
from typing import Any, Dict, List, Tuple
from vtelem.mtu import Host as Host, create_udp_socket as create_udp_socket, discover_mtu as discover_mtu
from vtelem.stream.writer import StreamWriter as StreamWriter

LOG: Any

class UdpClientManager(LockEntity):
    writer: Any
    clients: Any
    stream_ids: Any
    closer: Any
    def __init__(self, writer: StreamWriter) -> None: ...
    def client_name(self, sock_id: int) -> Host: ...
    def add_clients(self, hosts: List[Host]) -> Dict[Host, Tuple[int, int]]: ...
    def add_client(self, host: Host, flush: bool = ...) -> Tuple[int, int]: ...
    def remove_all(self) -> None: ...
    def remove_client(self, sock_id: int) -> None: ...
