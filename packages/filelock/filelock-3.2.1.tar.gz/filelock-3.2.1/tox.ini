[tox]
envlist =
    fix_lint
    py310
    py39
    py38
    py37
    py36
    py35
    py27
    pypy3
    pypy2
    coverage
    docs
    readme
isolated_build = true
skip_missing_interpreters = true
minversion = 3.14

[testenv]
description = run tests with {basepython}
passenv =
    PIP_*
    PYTEST_*
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
    {py27,pypy2}: PYTHONWARNINGS = ignore:DEPRECATION::pip._internal.cli.base_command
extras =
    testing
commands =
    pytest {tty:--color=yes} {posargs: \
      --junitxml {toxworkdir}{/}junit.{envname}.xml --cov filelock --cov {toxinidir}{/}tests \
      --cov-config=setup.cfg --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-fail-under 80 --cov-report html:{envtmpdir}{/}htmlcov \
      --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml \
      tests}
package = wheel
wheel_build_env = .pkg

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
passenv =
    *
basepython = python3.9
skip_install = true
deps =
    pre-commit>=2
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
    generates a diff coverage against origin/main (can be changed by setting DIFF_AGAINST env var)
passenv =
    DIFF_AGAINST
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
skip_install = true
deps =
    coverage>=5.0.1
    diff_cover>=3
extras =
parallel_show_output = true
commands =
    python -m coverage combine
    python -m coverage report --skip-covered --show-missing
    python -m coverage xml -o {toxworkdir}/coverage.xml
    python -m coverage html -d {toxworkdir}/htmlcov
    python -m diff_cover.diff_cover_tool --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}/coverage.xml
depends =
    py39
    py38
    py37
    py36
    py35
    py27
    pypy
    pypy3

[testenv:docs]
description = build documentation
extras =
    docs
commands =
    sphinx-build -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html {posargs}
    python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'

[testenv:readme]
description = check that the long description is valid (need for PyPI)
skip_install = true
deps =
    build>=0.6
    twine>=3
extras =
commands =
    python -m build -o {envtmpdir} --wheel --sdist .
    twine check {envtmpdir}/*

[testenv:dev]
description = generate a DEV environment
usedevelop = true
extras =
    docs
    testing
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

[flake8]
max-complexity = 22
max-line-length = 120

[pep8]
max-line-length = 120

[pytest]
timeout = 120
