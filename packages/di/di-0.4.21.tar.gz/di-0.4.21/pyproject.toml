[tool.poetry]
name = "di"
version = "0.4.21"
description = "Autowiring dependency injection"
authors = ["Adrian Garcia Badaracco <adrian@adriangb.com>"]
readme = "README.md"
repository = "https://github.com/adriangb/di"
documentation = "https://www.adriangb.com/di"
keywords = ["dependency-injection", "inversion-of-control", "SOLID", "IoC", "DI"]
license = "MIT"
classifiers=[
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Framework :: AsyncIO",
    "Framework :: Trio",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.8.0,<4"
anyio = "~3"

[tool.poetry.group.lint.dependencies]
black = ">=21.9b0,<22"
flake8 = "~3"
isort = "~5"
mypy = ">=v0.910"
pre-commit = "~2"

[tool.poetry.group.test.dependencies]
pytest = "~6"
pre-commit = "~2"
pytest-cov = { version = "~2", extras = ["toml"] }
pytest-sugar = "~0"
trio = "~0"
textual = "0.1.12"
httpx = "^0.19.0"
requests = "^2.26.0"
starlette = "^0.16.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "~1"
mkdocs-material = "~7"
mkautodoc = "~0"
mike = "~1"

[build-system]
requires = ["poetry-core>=1.0.6"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.coverage.run]
branch = true
source = ["di", "tests", "docs"]
dynamic_context = "test_function"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", '\.\.\.', "raise NotImplementedError", "TYPE_CHECKING", "__repr__"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.mypy]
files = "di/**/*.py,tests/**/*.py,docs/**/*.py"
no_implicit_optional = true
allow_redefinition = false
implicit_reexport = false
warn_unreachable = true
