// -*- mode: groovy -*-

params {
    denoise_cluster {
        sequence_processing {
            // Demultiplexing illumina workflow
            'demultiplexing_illumina' {
                rev_comp_barcodes = "False"
                rev_comp_mapping_barcodes = "False"
            }
            // 'join_reads' {}
            // Trim filter fixed workflow
            'export_visualization' {
                seq_samplesize = 10000
            }
            'trimming' {
                ncpus = 1
                max_ee = 2
                trunc_q = 2
            }
            // TODO: Demultiplexing 454 workflow
        }
        otu_assignment {
            selection = [
                "closed_reference",
                "open_reference",
                "de_novo",
                "dada2",
                "deblur"
            ]
            // Closed reference workflow
            'closed_reference' {
                ncpus = 1
                parameters = "nf_micone/data/qiime1_parameters.txt"
                reference_sequences = "nf_micone/data/rep_set/97_otus.fasta"
            }
            // Open reference workflow
            'open_reference' {
                ncpus = 1
                parameters = "nf_micone/data/qiime1_parameters.txt"
                reference_sequences = "nf_micone/data/rep_set/97_otus.fasta"
                picking_method = "uclust"
            }
            // De novo workflow
            'de_novo' {
                ncpus = 1
                parameters = "nf_micone/data/qiime1_parameters.txt"
            }
            // Dada2 workflow
            'dada2' {
                ncpus = 1
                big_data = "FALSE"
            }
            // Deblur workflow
            'deblur' {
                ncpus = 1
                min_reads = 2
                min_size = 2
            }
        }
        chimera_checking {
            selection = [
                "remove_bimera",
                "uchime"
            ]
            'remove_bimera' {
                ncpus = 1
                chimera_method = "consensus"
            }
            // 'uchime' {}
        }
    }
}
