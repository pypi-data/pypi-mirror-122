PY?={{py_v}}
GEMICAN?={{gemican}}
GEMICANOPTS={{gemicanopts}}

BASEDIR=$(CURDIR)
INPUTDIR=$(BASEDIR)/content
OUTPUTDIR=$(BASEDIR)/output
CONFFILE=$(BASEDIR)/gemicanconf.py
PUBLISHCONF=$(BASEDIR)/publishconf.py

{% if ftp %}
FTP_HOST={{ftp_host}}
FTP_USER={{ftp_user}}
FTP_TARGET_DIR={{ftp_target_dir}}

{% endif %}
{% if ssh %}
SSH_HOST={{ssh_host}}
SSH_PORT={{ssh_port}}
SSH_USER={{ssh_user}}
SSH_TARGET_DIR={{ssh_target_dir}}

{% endif %}

DEBUG ?= 0
ifeq ($(DEBUG), 1)
	GEMICANOPTS += -D
endif

RELATIVE ?= 0
ifeq ($(RELATIVE), 1)
	GEMICANOPTS += --relative-urls
endif

SERVER ?= "0.0.0.0"

PORT ?= 0
ifneq ($(PORT), 0)
	GEMICANOPTS += -p $(PORT)
endif


help:
	@echo 'Makefile for a gemican Web site                                           '
	@echo '                                                                          '
	@echo 'Usage:                                                                    '
	@echo '   make gemtext                        (re)generate the web site          '
	@echo '   make clean                          remove the generated files         '
	@echo '   make regenerate                     regenerate files upon modification '
	@echo '   make publish                        generate using production settings '
	@echo '   make serve [PORT=1966]              serve at gemini://localhost:1966   '
	@echo '   make serve-global [SERVER=0.0.0.0]  serve (as root) to $(SERVER):1965  '
	@echo '   make devserver [PORT=1966]          serve and regenerate together      '
	@echo '   make devserver-global               regenerate and serve on 0.0.0.0    '
{% if ssh %}
	@echo '   make ssh_upload                     upload the web site via SSH        '
	@echo '   make rsync_upload                   upload the web site via rsync+ssh  '
{% endif %}
{% if ftp %}
	@echo '   make ftp_upload                     upload the web site via FTP        '
{% endif %}
	@echo '                                                                          '
	@echo 'Set the DEBUG variable to 1 to enable debugging, e.g. make DEBUG=1 html   '
	@echo 'Set the RELATIVE variable to 1 to enable relative urls                    '
	@echo '                                                                          '

gemtext:
	"$(GEMICAN)" "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(GEMICANOPTS)

clean:
	[ ! -d "$(OUTPUTDIR)" ] || rm -rf "$(OUTPUTDIR)"

regenerate:
	"$(GEMICAN)" -r "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(GEMICANOPTS)

serve:
	"$(GEMICAN)" -l "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(GEMICANOPTS)

serve-global:
	"$(GEMICAN)" -l "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(GEMICANOPTS) -b $(SERVER)

devserver:
	"$(GEMICAN)" -lr "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(GEMICANOPTS)

devserver-global:
	$(GEMICAN) -lr $(INPUTDIR) -o $(OUTPUTDIR) -s $(CONFFILE) $(GEMICANOPTS) -b 0.0.0.0

publish:
	"$(GEMICAN)" "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(PUBLISHCONF)" $(GEMICANOPTS)

{% set upload = [] %}
{% if ssh %}
{% set upload = upload + ["ssh_upload"] %}
ssh_upload: publish
	scp -P $(SSH_PORT) -r "$(OUTPUTDIR)"/* "$(SSH_USER)@$(SSH_HOST):$(SSH_TARGET_DIR)"

{% set upload = upload + ["rsync_upload"] %}
rsync_upload: publish
	rsync -e "ssh -p $(SSH_PORT)" -P -rvzc --include tags --cvs-exclude --delete "$(OUTPUTDIR)"/ "$(SSH_USER)@$(SSH_HOST):$(SSH_TARGET_DIR)"

{% endif %}
{% if ftp %}
{% set upload = upload + ["ftp_upload"] %}
ftp_upload: publish
	lftp ftp://$(FTP_USER)@$(FTP_HOST) -e "mirror -R $(OUTPUTDIR) $(FTP_TARGET_DIR) ; quit"

{% endif %}

.PHONY: html help clean regenerate serve serve-global devserver publish {{ upload|join(" ") }}
