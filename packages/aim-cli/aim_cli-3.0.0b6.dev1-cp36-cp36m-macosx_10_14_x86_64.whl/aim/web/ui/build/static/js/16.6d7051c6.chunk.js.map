{"version":3,"sources":["services/analytics.ts","utils/encoder/encoder.ts","components/CopyToClipBoard/CopyToClipBoard.tsx","components/CodeBlock/CodeBlock.tsx","pages/Home/components/ExploreAimCard/ExploreAimCard.tsx","assets/icons/github.svg","assets/icons/slack.svg","pages/Home/components/ExploreAim/ExploreAim.tsx","pages/Home/components/SetupGuide/SetupGuide.tsx","components/HeatMap/HeatMap.tsx","pages/Home/components/Activity/Activity.tsx","pages/Home/Home.tsx","services/models/home/homeAppModel.ts","pages/Home/HomeContainer.tsx"],"names":["enabled","window","analytics","pageView","pageName","pageCat","page","path","location","pathname","url","hostname","search","referrer","title","trackEvent","eventName","properties","track","encode","value","oneWayHashing","md5","JSON","stringify","bs58check","Buffer","from","decode","toString","ex","CopyToClipboard","contentRef","showSuccessDelay","className","React","useState","showCopiedIcon","setShowCopiedIcon","useEffect","setTimeout","onCopy","useCallback","current","navigator","clipboard","writeText","innerText","trim","then","catch","onClick","style","color","fontSize","Icon","name","displayName","memo","CodeBlock","code","language","createRef","defaultProps","theme","tokens","getLineProps","getTokenProps","ref","map","line","i","key","token","CopyToClipBoard","ExploreAimCard","description","to","cardsData","ExploreAim","target","href","rel","src","slackIcon","alt","githubIcon","item","SetupGuide","cellScales","HeatMap","data","startDate","endDate","cellSize","cellSpacing","scaleRange","months","onCellClick","history","useHistory","Date","getFullYear","getMonth","getDate","firstDay","getDay","shiftDate","lastDay","diffDays","Math","round","abs","maxVal","max","filter","Number","isInteger","orderedMonths","slice","xAxisStyles","width","gridStyles","gridTemplateColumns","gridTemplateRows","height","gridColumnGap","gridRowGap","date","numDays","newDate","setDate","indexToDate","index","x","floor","renderCell","dataItem","s","length","getItem","scale","ceil","tooltip","Tooltip","e","stopPropagation","getTime","query","push","role","m","d","Array","keys","Activity","activityData","today","Grid","container","spacing","num_experiments","num_runs","xs","Object","activity_map","k","Home","model","createModel","homeAppModel","initialize","init","getActivityData","projectsService","fetchActivityData","call","setState","abort","HomeContainer","activityRequestRef","useRef","homeData","useModel"],"mappings":";iGAAA,oEAOA,IAAMA,EAAU,WACd,OAAwC,IAArBC,OAAOC,WAkBtBC,EAAW,SAACC,GAA8B,IAApBC,EAAmB,uDAAT,KAC/BL,KAGLC,OAAOC,UAAUI,KAAKD,EAASD,EAAU,CACvCG,KAAMN,OAAOO,SAASC,SACtBC,IAAKT,OAAOO,SAASG,SACrBC,OAAQ,KACRC,SAAU,KACVC,MAAO,QAILC,EAAa,SAACC,GAAwC,IAArBC,EAAoB,uDAAP,GAC7CjB,KAGLC,OAAOC,UAAUgB,MAAMF,EAAWC,EAAY,CAC5CV,KAAMN,OAAOO,SAASC,SACtBC,IAAKT,OAAOO,SAASG,SACrBL,KAAM,CACJC,KAAM,KACNK,OAAQ,KACRC,SAAU,KACVC,MAAO,KACPJ,IAAK,U,kCCnDX,wHAGO,SAASS,EACdC,EACAC,GAEA,OAAOA,EACHC,IAAIC,KAAKC,UAAUJ,IACnBK,IAAUN,OAAOO,EAAOC,KAAKJ,KAAKC,UAAUJ,KAG3C,SAASQ,EAAOR,GACrB,IACE,OAAOK,IAAUG,OAAOR,GAAOS,WAC/B,MAAOC,GACP,MAAO,S,qOCXX,SAASC,EAAT,GAIkF,IAHhFC,EAG+E,EAH/EA,WAG+E,IAF/EC,wBAE+E,MAF5D,KAE4D,MAD/EC,iBAC+E,MADnE,GACmE,EAC/E,EAA4CC,IAAMC,UAAkB,GAApE,mBAAOC,EAAP,KAAuBC,EAAvB,KAEAH,IAAMI,WAAU,WACVF,GACFG,YAAW,WACTF,GAAkB,KACjBL,KAEJ,CAACI,IAEJ,IAAMI,EAASN,IAAMO,aAAY,WAC3BV,EAAWW,UAAYN,GACzBO,UAAUC,UACPC,UAAUd,EAAWW,QAAQI,UAAUC,KAAK,KAC5CC,MAAK,WACJX,GAAkB,MAEnBY,UAEJ,CAAClB,EAAYK,IAEhB,OACE,sBAAMH,UAAWA,EAAWiB,QAASV,EAArC,SACGJ,EACC,sBAAMe,MAAO,CAAEC,MAAO,QAASC,SAAU,IAAzC,qBAEA,cAACC,EAAA,EAAD,CAAMC,KAAK,WAMnBzB,EAAgB0B,YAAc,kBAEftB,UAAMuB,KAA4B3B,G,OClCjD,SAAS4B,EAAT,GAIsE,IAAD,IAHnEC,YAGmE,MAH5D,GAG4D,MAFnE1B,iBAEmE,MAFvD,GAEuD,MADnE2B,gBACmE,MADxD,SACwD,EAC7D7B,EAAaG,IAAM2B,YACzB,OACE,sBAAK5B,UAAS,+BAA0BA,GAAxC,UACE,cAAC,IAAD,2BACM6B,KADN,IAEEC,MAAOA,IACPJ,KAAMA,EAAKZ,OACXa,SAAUA,EAJZ,SAMG,gBAAG3B,EAAH,EAAGA,UAAWkB,EAAd,EAAcA,MAAOa,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,qBAAKjC,UAAWA,EAAWkB,MAAOA,EAAOgB,IAAKpC,EAA9C,SACGiC,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACV,+CAAiBL,EAAa,CAAEI,OAAME,IAAKD,KAA3C,aACGD,EAAKD,KAAI,SAACI,EAAOD,GAAR,OACR,oCAAoBL,EAAc,CAAEM,QAAOD,SAAhCA,QAFLD,YASlB,cAACG,EAAD,CACExC,UAAU,wBACVF,WAAYA,OAMLG,QAAMuB,KAAKC,I,uOCnC1B,SAASgB,EAAT,GAImE,IAHjE7D,EAGgE,EAHhEA,MACAP,EAEgE,EAFhEA,KACAqE,EACgE,EADhEA,YAEA,OACE,eAAC,IAAD,CAAS1C,UAAU,4BAA4B2C,GAAE,WAAMtE,GAAvD,UACE,qBAAK2B,UAAU,uBAAf,SACE,cAACqB,EAAA,EAAD,CAAMC,KAAI,UAAKjD,OAEjB,oBAAI2B,UAAU,wBAAd,SAAuCpB,IACvC,mBAAGoB,UAAU,uBAAb,SAAqC0C,IACrC,qBAAK1C,UAAU,wCAAf,SACE,cAACqB,EAAA,EAAD,CAAMC,KAAK,0BAMJrB,UAAMuB,KAAKiB,GC5BX,MAA0B,mCCA1B,MAA0B,kCCcnCG,G,OAA4B,CAChC,CACEhE,MAAO,gBACP8D,YAAa,uDACbrE,KAAM,QAER,CACEO,MAAO,mBACP8D,YACE,yEACFrE,KAAM,WAER,CACEO,MAAO,kBACP8D,YACE,yEACFrE,KAAM,UAER,CACEO,MAAO,OACP8D,YAAa,uDACbrE,KAAM,QAER,CACEO,MAAO,YACP8D,YACE,yEACFrE,KAAM,eAGV,SAASwE,IACP,OACE,sBAAK7C,UAAU,wBAAf,UACE,gCACE,8CACA,sBAAKA,UAAU,gCAAf,UACE,oBACE8C,OAAO,SACPC,KAAK,6BACLC,IAAI,aACJhD,UAAU,2BAJZ,UAME,qBAAKiD,IAAKC,EAAWC,IAAI,UACzB,4DACA,cAAC9B,EAAA,EAAD,CAAMC,KAAK,mBAEb,oBACEwB,OAAO,SACPC,KAAK,kCACLC,IAAI,aACJhD,UAAU,2BAJZ,UAME,qBAAKiD,IAAKG,EAAYD,IAAI,WAC1B,oDACkB,uBADlB,yCAGA,cAAC9B,EAAA,EAAD,CAAMC,KAAK,yBAIjB,sBAAKtB,UAAU,0BAAf,UACE,6CACA,qBAAKA,UAAU,6BAAf,SACG4C,EAAUT,KAAI,SAACkB,GAAD,OACb,cAAC,EAAD,eAAoCA,GAAfA,EAAKhF,iBAQvB4B,UAAMuB,KAAKqB,G,gBChF1B,SAASS,IACP,OACE,sBAAKtD,UAAU,wBAAf,UACE,8DACA,sBAAKA,UAAU,mBAAf,UACE,4CACA,cAACyB,EAAA,EAAD,CAAWC,KAAK,kBAElB,sBAAK1B,UAAU,mBAAf,UACE,0DACA,cAACyB,EAAA,EAAD,CACEC,KAAI,oTAcR,sBAAK1B,UAAU,mCAAf,UACE,oBACE8C,OAAO,SACPC,KAAK,2CACLC,IAAI,aACJhD,UAAU,6BAJZ,UAME,qBAAKA,UAAU,mCAAf,SACE,cAACqB,EAAA,EAAD,CAAMC,KAAK,WAEb,gDAEF,sBAAKtB,UAAU,6BAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,cAACqB,EAAA,EAAD,CAAMC,KAAK,gBAEb,uDAEF,sBAAKtB,UAAU,6BAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,cAACqB,EAAA,EAAD,CAAMC,KAAK,cAEb,sDAOKrB,UAAMuB,KAAK8B,G,6DClDpBC,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,GAkN3BC,MAjNf,YAQS,IAPPC,EAOM,EAPNA,KACAC,EAMM,EANNA,UACAC,EAKM,EALNA,QAKM,IAJNC,gBAIM,MAJK,GAIL,MAHNC,mBAGM,MAHQ,EAGR,MAFNC,kBAEM,MAFO,EAEP,EAGAC,GAHA,EADNC,YAIe,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAEIC,EAAUC,cAChBR,EAAY,IAAIS,KACdT,EAAUU,cACVV,EAAUW,WACVX,EAAUY,WAEZX,EAAU,IAAIQ,KACZR,EAAQS,cACRT,EAAQU,WACRV,EAAQW,WAIV,IADA,IAAIC,EAAWb,EACc,IAAtBa,EAASC,UACdD,EAAWE,EAAUF,GAAW,GAIlC,IADA,IAAIG,EAAUf,EACc,IAArBe,EAAQF,UACbE,EAAUD,EAAUC,EAAS,GAG/B,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,KAAKP,EAAWG,GAtClC,QAwCTK,EAASH,KAAKI,IAAL,MAAAJ,KAAI,mBACdnB,QADc,IACdA,OADc,EACdA,EAAMtB,KAAI,SAACE,GAAD,cAAYA,QAAZ,IAAYA,OAAZ,EAAYA,EAAI,MAAI4C,QAAO,SAAC5C,GAAD,OAAY6C,OAAOC,UAAU9C,QAGjE+C,EAAa,sBACdrB,EAAOsB,MAAMd,EAASF,aADR,YAEdN,EAAOsB,MAAM,EAAGd,EAASF,cAGxBiB,EAAc,CAClBC,MAAM,GAAD,OACFZ,EAAW,EAAKf,GAAYe,EAAW,EAAI,GAAKd,EAAc,GAD5D,OAKD2B,EAAa,CACjBC,oBAAoB,UAAD,OAAYd,EAAW,EAAvB,UACnBe,iBAAkB,iBAClBH,MAAM,GAAD,OAAMZ,EAAW,EAAKf,GAAYe,EAAW,EAAI,GAAKd,EAAtD,MACL8B,OAAO,GAAD,OAAK,EAAI/B,EAAW,EAAIC,EAAxB,MACN+B,cAAc,GAAD,OAAK/B,EAAL,MACbgC,WAAW,GAAD,OAAKhC,EAAL,OAGZ,SAASY,EAAUqB,EAAWC,GAC5B,IAAMC,EAAU,IAAI7B,KAAK2B,GAEzB,OADAE,EAAQC,QAAQD,EAAQ1B,UAAYyB,GAC7BC,EAGT,SAASE,EAAYC,GACnB,IAAMC,EAAIxB,KAAKyB,MAAMF,EAAQ,GAG7B,OAAO1B,EAAUF,EAAc,EAAJ6B,EAFjBD,EAAQ,GA0BpB,SAASG,EAAWH,GAClB,IALgBjH,EAKVqH,EAtBR,SAAiBJ,GAIf,IAHA,IAAML,EAAOI,EAAYC,GAErB9C,EAAO,KACFmD,EAAI,EAAGA,EAAI/C,EAAKgD,OAAQD,IAAK,CAAC,IAAD,MACpC,IACE,UAAA/C,EAAK+C,UAAL,eAAU,GAAGpC,iBAAkB0B,EAAK1B,gBACpC,UAAAX,EAAK+C,UAAL,eAAU,GAAGnC,cAAeyB,EAAKzB,aACjC,UAAAZ,EAAK+C,UAAL,eAAU,GAAGlC,aAAcwB,EAAKxB,UAChC,CACAjB,EAAOI,EAAK+C,GACZ,OAGJ,OAAOnD,EAQUqD,CAAQP,GACnBL,EAAOI,EAAYC,GACnBQ,EACJJ,GAAYrB,OAAOC,UAAP,OAAiBoB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAW,KAR1BrH,EAQyCqH,EAAS,GAP3D3B,KAAKgC,KAAM1H,EAAQ6F,EAAUjB,IAOoC,EAClE+C,EAAO,WAAON,EAAWA,EAAS,GAAK,EAAhC,uBACO,KAAV,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAW,IAAW,IAAM,GADjB,eAENxC,EAAO+B,EAAKzB,YAFN,YAEqByB,EAAKxB,UAF1B,aAEwCwB,EAAK1B,eAyB1D,OACE,qBAAKpE,UAAU,iCAAf,UACI2D,GAAWuC,EAAYC,GACvB,qBAAKnG,UAAU,uDAEf,cAAC8G,EAAA,EAAD,CAASlI,MAAOiI,EAAhB,SACE,qBACE7G,UAAS,6DAAwD2G,GACjE1F,QA/BV,SAAsB8F,GAEpB,GADAA,EAAEC,kBACEL,EAAO,CACT,IAAMjD,EAAYoC,EAAKmB,UACjBtD,EAAU,IAAIQ,KAClB2B,EAAK1B,cACL0B,EAAKzB,WACLyB,EAAKxB,UACL,GACA,GACA,IACA2C,UAEIvI,EAASO,YAAO,CACpBiI,MAAM,wBAAD,OACHxD,EAAY,IADT,qCAEwBC,EAAU,OAEzC3F,IAAqB,uCACrBiG,EAAQkD,KAAR,uBAA6BzI,MAavB0I,KAAK,kBARwCjB,GAwBzD,OACE,sBAAKnG,UAAU,kBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,wBACA,qBACEA,UAAU,2DACVkB,MAAOoE,EAFT,SAIGF,EAAcC,MAAM,EAAG,IAAIlD,KAAI,SAACkF,EAAGhF,GAAJ,OAC9B,qBAAKrC,UAAU,sCAAf,SACGqH,GADuDhF,QAK9D,qBAAKrC,UAAU,2DAAf,SAxKW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAyK9BmC,KAAI,SAACmF,EAAGjF,GAAJ,OACZ,qBAAKrC,UAAU,sCAAf,SACGsH,GADuDjF,QAK9D,qBAAKrC,UAAU,6BAA6BkB,MAAOsE,EAAnD,SACG,YAAI+B,MAAM5C,GAAU6C,QAAQrF,KAAI,SAACgE,GAAD,OAAWG,EAAWH,WAG3D,sBAAKnG,UAAU,8BAAf,UACE,wCACCuD,EAAWpB,KAAI,SAACwE,GAAD,OACd,qBAEEzF,MAAO,CAAEqE,MAAO3B,EAAU+B,OAAQ/B,GAClC5D,UAAU,iCAHZ,SAKE,qBACEA,UAAS,6DAAwD2G,MAL9DA,MAUT,+C,OC9MR,SAASc,EAAT,GAEqE,IAAD,EADlEC,EACkE,EADlEA,aAOA,IAAIC,EAAQ,IAAIxD,KAChB,OACE,eAACyD,EAAA,EAAD,CAAM5H,UAAU,sBAAsB6H,WAAS,EAACC,QAAS,EAAzD,UACE,eAACF,EAAA,EAAD,CAAMvE,MAAI,EAAV,UACE,4CACA,sBAAKrD,UAAU,6BAAf,UACE,+CACA,kCAAqB,OAAZ0H,QAAY,IAAZA,OAAA,EAAAA,EAAcK,kBAAmB,OAE5C,sBAAK/H,UAAU,6BAAf,UACE,wCACA,kCAAqB,OAAZ0H,QAAY,IAAZA,OAAA,EAAAA,EAAcM,WAAY,UAGvC,eAACJ,EAAA,EAAD,CAAMK,IAAE,EAAC5E,MAAI,EAAb,UACE,0CACA,qBAAKrD,UAAU,oBAAf,SACE,cAAC,EAAD,CACE0D,UAvBV,SAAmBoC,EAAWC,GAC5B,IAAMC,EAAU,IAAI7B,KAAK2B,GAEzB,OADAE,EAAQC,QAAQD,EAAQ1B,UAAYyB,GAC7BC,EAoBYvB,CAAUkD,GAAO,KAC5BhE,QAASgE,EAETlE,KAAMyE,OAAOV,KAAP,iBAAYE,QAAZ,IAAYA,OAAZ,EAAYA,EAAcS,oBAA1B,QAA0C,IAAIhG,KAAI,SAACiG,GAAD,MAAO,CAC7D,IAAIjE,KAAKiE,GACTV,EAAaS,aAAaC,iBAQzBnI,UAAMuB,KAAKiG,G,OCvBXY,MAff,YAEkE,IADhEX,EAC+D,EAD/DA,aAEA,OACE,0BAAS1H,UAAU,kBAAnB,UACE,qBAAKA,UAAU,4BAAf,SACE,cAAC,EAAD,CAAU0H,aAAcA,MAE1B,sBAAK1H,UAAU,2BAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,gBChBFsI,EAAQC,YAAiB,IAkB/B,IAMeC,EANG,2BACbF,GADa,IAEhBG,WALF,WACEH,EAAMI,QAKNC,gBAnBF,WACE,MAAwBC,IAAgBC,oBAAhCC,EAAR,EAAQA,KACR,MAAO,CACLA,KAAM,kBACJA,IAAO/H,MAAK,SAAC0C,GACX6E,EAAMS,SAAS,CACbrB,aAAcjE,QAGpBuF,MARF,EAAcA,U,QCcDC,UAdf,WACE,IAAMC,EAAqBjJ,IAAMkJ,OAAOX,EAAaG,mBAC/CS,EAAWC,YAASb,GAU1B,OARAvI,IAAMI,WAAU,WAGd,OAFAmI,EAAaC,aACbS,EAAmBzI,QAAQqI,OACpB,WACLI,EAAmBzI,QAAQuI,WAE5B,IAEI,cAAC,EAAD,CAAMtB,aAAc0B,EAAS1B","file":"static/js/16.6d7051c6.chunk.js","sourcesContent":["//@ts-nocheck\nexport const SEGMENT_DEMO_WRITE_KEY = 'Rj1I4AisLSvsvAnPW7OqkoYBUTXJRBHK';\nexport const SEGMENT_WRITE_KEY = 'LBnAonwto541z4Dn4ntGJScCsYNRdIC3';\nexport function isDev() {\n  return process.env.NODE_ENV === 'development';\n}\n\nconst enabled = () => {\n  return !isDev() && window.analytics !== false; //!isDev() && cookies.getCookie(configs.USER_ANALYTICS_COOKIE_NAME) == 1;\n};\n\nconst init = () => {\n  if (!enabled()) {\n    return;\n  }\n\n  if (\n    window.location.hostname.indexOf('aimstack.io') !== -1 &&\n    (window.location.hostname.indexOf('demo') !== -1 ||\n      window.location.hostname.indexOf('play') !== -1)\n  ) {\n    window.analytics.load(SEGMENT_DEMO_WRITE_KEY);\n  } else {\n    window.analytics.load(SEGMENT_WRITE_KEY);\n  }\n};\nconst pageView = (pageName, pageCat = null) => {\n  if (!enabled()) {\n    return;\n  }\n  window.analytics.page(pageCat, pageName, {\n    path: window.location.pathname,\n    url: window.location.hostname,\n    search: null,\n    referrer: null,\n    title: null,\n  });\n};\n\nconst trackEvent = (eventName: string, properties = {}) => {\n  if (!enabled()) {\n    return;\n  }\n  window.analytics.track(eventName, properties, {\n    path: window.location.pathname,\n    url: window.location.hostname,\n    page: {\n      path: null,\n      search: null,\n      referrer: null,\n      title: null,\n      url: null,\n    },\n  });\n};\n\nexport { init, pageView, trackEvent };\n","import bs58check from 'bs58check';\nimport md5 from 'md5';\n\nexport function encode(\n  value: Record<string, unknown>,\n  oneWayHashing?: boolean,\n): string {\n  return oneWayHashing\n    ? md5(JSON.stringify(value))\n    : bs58check.encode(Buffer.from(JSON.stringify(value)));\n}\n\nexport function decode(value: string): string {\n  try {\n    return bs58check.decode(value).toString();\n  } catch (ex) {\n    return '{}';\n  }\n}\n","import React from 'react';\nimport { ICopyToClipBoardProps } from 'types/components/CopyToClipBoard/CopyToClipBoard';\n\nimport Icon from 'components/Icon/Icon';\n\nfunction CopyToClipboard({\n  contentRef,\n  showSuccessDelay = 1500,\n  className = '',\n}: ICopyToClipBoardProps): React.FunctionComponentElement<ICopyToClipBoardProps> {\n  const [showCopiedIcon, setShowCopiedIcon] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (showCopiedIcon) {\n      setTimeout(() => {\n        setShowCopiedIcon(false);\n      }, showSuccessDelay);\n    }\n  }, [showCopiedIcon]);\n\n  const onCopy = React.useCallback(() => {\n    if (contentRef.current && !showCopiedIcon) {\n      navigator.clipboard\n        .writeText(contentRef.current.innerText.trim(''))\n        .then(function () {\n          setShowCopiedIcon(true);\n        })\n        .catch();\n    }\n  }, [contentRef, showCopiedIcon]);\n\n  return (\n    <span className={className} onClick={onCopy}>\n      {showCopiedIcon ? (\n        <span style={{ color: 'green', fontSize: 12 }}>Copied!</span>\n      ) : (\n        <Icon name='copy' />\n      )}\n    </span>\n  );\n}\n\nCopyToClipboard.displayName = 'CopyToClipBoard';\n\nexport default React.memo<ICopyToClipBoardProps>(CopyToClipboard);\n","import React from 'react';\n// import AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/nightOwlLight';\n\nimport { ICodeBlockProps } from 'types/components/CodeBlock/CodeBlock';\nimport CopyToClipBoard from 'components/CopyToClipBoard/CopyToClipBoard';\n\nimport './CodeBlock.scss';\n\nfunction CodeBlock({\n  code = '',\n  className = '',\n  language = 'python',\n}: ICodeBlockProps): React.FunctionComponentElement<React.ReactNode> {\n  const contentRef = React.createRef<HTMLPreElement>();\n  return (\n    <div className={`CodeBlock__container ${className}`}>\n      <Highlight\n        {...defaultProps}\n        theme={theme}\n        code={code.trim()}\n        language={language}\n      >\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\n          <pre className={className} style={style} ref={contentRef}>\n            {tokens.map((line, i) => (\n              <div key={i} {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </pre>\n        )}\n      </Highlight>\n      <CopyToClipBoard\n        className='CodeBlock__copy__span'\n        contentRef={contentRef}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(CodeBlock);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Icon from 'components/Icon/Icon';\nimport { IExploreCard } from '../ExploreAim/ExploreAim';\nimport { IconName } from 'types/components/Icon/Icon';\n\nimport './ExploreAimCard.scss';\n\nfunction ExploreAimCard({\n  title,\n  path,\n  description,\n}: IExploreCard): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <NavLink className='ExploreAimCard__container' to={`/${path}`}>\n      <div className='ExploreAimCard__icon'>\n        <Icon name={`${path}` as IconName} />\n      </div>\n      <h4 className='ExploreAimCard__title'>{title}</h4>\n      <p className='ExploreAimCard__desc'>{description}</p>\n      <div className='ExploreAim_card__arrowIcon__container'>\n        <Icon name='long-arrow-right' />\n      </div>\n    </NavLink>\n  );\n}\n\nexport default React.memo(ExploreAimCard);\n","export default __webpack_public_path__ + \"static/media/github.a1af1e77.svg\";","export default __webpack_public_path__ + \"static/media/slack.2d5fba05.svg\";","import React from 'react';\n\nimport ExploreAimCard from '../ExploreAimCard/ExploreAimCard';\nimport githubIcon from 'assets/icons/github.svg';\nimport slackIcon from 'assets/icons/slack.svg';\nimport Icon from 'components/Icon/Icon';\n\nimport './ExploreAim.scss';\n\nexport interface IExploreCard {\n  title: string;\n  description: string;\n  path: string;\n}\nconst cardsData: IExploreCard[] = [\n  {\n    title: 'Runs Explorer',\n    description: 'We constantly seek to improve Aim for the community.',\n    path: 'runs',\n  },\n  {\n    title: 'Metrics Explorer',\n    description:\n      \"Aim UI uses segment's analytics toolkit to collect basic info about...\",\n    path: 'metrics',\n  },\n  {\n    title: 'Params Explorer',\n    description:\n      \"Aim UI uses segment's analytics toolkit to collect basic info about...\",\n    path: 'params',\n  },\n  {\n    title: 'Tags',\n    description: 'We constantly seek to improve Aim for the community.',\n    path: 'tags',\n  },\n  {\n    title: 'Bookmarks',\n    description:\n      \"Aim UI uses segment's analytics toolkit to collect basic info about...\",\n    path: 'bookmarks',\n  },\n];\nfunction ExploreAim(): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <div className='ExploreAim__container'>\n      <div>\n        <h2>Get Involved</h2>\n        <div className='ExploreAim__social__container'>\n          <a\n            target='_blank'\n            href='https://aimstack.slack.com'\n            rel='noreferrer'\n            className='ExploreAim__social__item'\n          >\n            <img src={slackIcon} alt='slack' />\n            <span>Join Aim slack community</span>\n            <Icon name='arrow-right' />\n          </a>\n          <a\n            target='_blank'\n            href='https://github.com/aimhubio/aim'\n            rel='noreferrer'\n            className='ExploreAim__social__item'\n          >\n            <img src={githubIcon} alt='github' />\n            <span>\n              Create an issue <br /> or report a bug to help us improve\n            </span>\n            <Icon name='arrow-right' />\n          </a>\n        </div>\n      </div>\n      <div className='ExploreAim__block__item'>\n        <h2>Explore Aim</h2>\n        <div className='ExploreAim_card__container'>\n          {cardsData.map((item: IExploreCard) => (\n            <ExploreAimCard key={item.path} {...item} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(ExploreAim);\n","import React from 'react';\nimport CodeBlock from 'components/CodeBlock/CodeBlock';\nimport Icon from 'components/Icon/Icon';\n\nimport './SetupGuide.scss';\n\nfunction SetupGuide(): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <div className='SetupGuide__container'>\n      <h2>Integrate Aim with your code</h2>\n      <div className='SetupGuide__code'>\n        <h3>Import Aim</h3>\n        <CodeBlock code='import aim' />\n      </div>\n      <div className='SetupGuide__code'>\n        <h3>Track your training runs</h3>\n        <CodeBlock\n          code={`run_inst = aim.Run(experiment='my_exp_name')\n\n# Save inputs, hparams or any other \\`key: value\\` pairs\nrun_inst['hparams'] = {\n    'learning_rate': 0.01,\n    'batch_size': 32,\n}\n\n# Track metrics\nfor step in range(10):\n    run_inst.track(metric_value, name='metric_name', epoch=epoch_number)\n`}\n        />\n      </div>\n      <div className='StyleGuide__resources__container'>\n        <a\n          target='_blank'\n          href='https://github.com/aimhubio/aim#overview'\n          rel='noreferrer'\n          className='SetupGuide__resource__item'\n        >\n          <div className='StyleGuide__resource__item__icon'>\n            <Icon name='runs' />\n          </div>\n          <span>Full docs</span>\n        </a>\n        <div className='SetupGuide__resource__item'>\n          <div className='StyleGuide__resource__item__icon'>\n            <Icon name='bookmarks' />\n          </div>\n          <span>Jupyter notebook</span>\n        </div>\n        <div className='SetupGuide__resource__item'>\n          <div className='StyleGuide__resource__item__icon'>\n            <Icon name='metrics' />\n          </div>\n          <span>Live demo</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(SetupGuide);\n","import React from 'react';\n\n// import { classNames } from '../../utils';\nimport { Tooltip } from '@material-ui/core';\n\nimport './HeatMapStyle.scss';\nimport { useHistory } from 'react-router-dom';\nimport { encode } from 'utils/encoder/encoder';\nimport * as analytics from 'services/analytics';\n\nconst cellScales: number[] = [0, 1, 2, 3, 4];\nfunction HeatMap({\n  data,\n  startDate,\n  endDate,\n  cellSize = 12,\n  cellSpacing = 4,\n  scaleRange = 4,\n  onCellClick,\n}: any) {\n  const oneDay = 24 * 60 * 60 * 1000;\n  const weekDays = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  const history = useHistory();\n  startDate = new Date(\n    startDate.getFullYear(),\n    startDate.getMonth(),\n    startDate.getDate(),\n  );\n  endDate = new Date(\n    endDate.getFullYear(),\n    endDate.getMonth(),\n    endDate.getDate(),\n  );\n\n  let firstDay = startDate;\n  while (firstDay.getDay() !== 0) {\n    firstDay = shiftDate(firstDay, -1);\n  }\n\n  let lastDay = endDate;\n  while (lastDay.getDay() !== 0) {\n    lastDay = shiftDate(lastDay, 1);\n  }\n\n  const diffDays = Math.round(Math.abs((firstDay - lastDay) / oneDay));\n\n  const maxVal = Math.max(\n    ...data?.map((i: any) => i?.[1]).filter((i: any) => Number.isInteger(i)),\n  );\n\n  const orderedMonths = [\n    ...months.slice(firstDay.getMonth()),\n    ...months.slice(0, firstDay.getMonth()),\n  ];\n\n  const xAxisStyles = {\n    width: `${\n      (diffDays / 7) * cellSize + (diffDays / 7 - 1) * cellSpacing - 50\n    }px`,\n  };\n\n  const gridStyles = {\n    gridTemplateColumns: `repeat(${diffDays / 7}, 1fr)`,\n    gridTemplateRows: 'repeat(7, 1fr)',\n    width: `${(diffDays / 7) * cellSize + (diffDays / 7 - 1) * cellSpacing}px`,\n    height: `${7 * cellSize + 6 * cellSpacing}px`,\n    gridColumnGap: `${cellSpacing}px`,\n    gridRowGap: `${cellSpacing}px`,\n  };\n\n  function shiftDate(date: any, numDays: any) {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + numDays);\n    return newDate;\n  }\n\n  function indexToDate(index: number) {\n    const x = Math.floor(index / 7);\n    const y = index % 7;\n\n    return shiftDate(firstDay, x * 7 + y);\n  }\n\n  function getItem(index: number) {\n    const date = indexToDate(index);\n\n    let item = null;\n    for (let s = 0; s < data.length; s++) {\n      if (\n        data[s]?.[0].getFullYear() === date.getFullYear() &&\n        data[s]?.[0].getMonth() === date.getMonth() &&\n        data[s]?.[0].getDate() === date.getDate()\n      ) {\n        item = data[s];\n        break;\n      }\n    }\n    return item;\n  }\n\n  function getScale(value: number) {\n    return Math.ceil((value / maxVal) * scaleRange);\n  }\n\n  function renderCell(index: number) {\n    const dataItem = getItem(index);\n    const date = indexToDate(index);\n    const scale =\n      dataItem && Number.isInteger(dataItem?.[1]) ? getScale(dataItem[1]) : 0;\n    const tooltip = ` ${dataItem ? dataItem[1] : 0} tracked run${\n      dataItem?.[1] !== 1 ? 's' : ''\n    } on ${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n\n    function onClickeCell(e: React.MouseEvent) {\n      e.stopPropagation();\n      if (scale) {\n        const startDate = date.getTime();\n        const endDate = new Date(\n          date.getFullYear(),\n          date.getMonth(),\n          date.getDate(),\n          23,\n          59,\n          59,\n        ).getTime();\n\n        const search = encode({\n          query: `run.creation_time >= ${\n            startDate / 1000\n          } and run.creation_time <= ${endDate / 1000}`,\n        });\n        analytics.trackEvent('[Home][HeatMap] Activity cell click');\n        history.push(`/runs?search=${search}`);\n      }\n    }\n\n    return (\n      <div className='CalendarHeatmap__cell__wrapper' key={index}>\n        {+endDate < +indexToDate(index) ? (\n          <div className='CalendarHeatmap__cell CalendarHeatmap__cell--dummy' />\n        ) : (\n          <Tooltip title={tooltip}>\n            <div\n              className={`CalendarHeatmap__cell CalendarHeatmap__cell--scale-${scale}`}\n              onClick={onClickeCell}\n              role='navigation'\n              // className={classNames({\n              //   CalendarHeatmap__cell: true,\n              //   [`CalendarHeatmap__cell--scale-${scale}`]:\n              //     Number.isInteger(scale),\n              // })}\n              // onClick={\n              //   !!onCellClick ? () => onCellClick(dataItem, date, index) : null\n              // }\n            />\n          </Tooltip>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className='CalendarHeatmap'>\n      <div className='CalendarHeatmap__map'>\n        <div />\n        <div\n          className='CalendarHeatmap__map__axis CalendarHeatmap__map__axis--x'\n          style={xAxisStyles}\n        >\n          {orderedMonths.slice(0, 10).map((m, i) => (\n            <div className='CalendarHeatmap__map__axis__tick--x' key={i}>\n              {m}\n            </div>\n          ))}\n        </div>\n        <div className='CalendarHeatmap__map__axis CalendarHeatmap__map__axis--y'>\n          {weekDays.map((d, i) => (\n            <div className='CalendarHeatmap__map__axis__tick--y' key={i}>\n              {d}\n            </div>\n          ))}\n        </div>\n        <div className='CalendarHeatmap__map__grid' style={gridStyles}>\n          {[...Array(diffDays).keys()].map((index) => renderCell(index))}\n        </div>\n      </div>\n      <div className='CalendarHeatmap__cell__info'>\n        <span>Less</span>\n        {cellScales.map((scale) => (\n          <div\n            key={scale}\n            style={{ width: cellSize, height: cellSize }}\n            className='CalendarHeatmap__cell__wrapper'\n          >\n            <div\n              className={`CalendarHeatmap__cell CalendarHeatmap__cell--scale-${scale}`}\n            />\n          </div>\n        ))}\n\n        <span>More</span>\n      </div>\n    </div>\n  );\n}\n\nexport default HeatMap;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport HeatMap from 'components/HeatMap/HeatMap';\nimport { IActivityProps } from 'types/pages/home/components/Activity/Activity';\n\nimport './Activity.scss';\n\nfunction Activity({\n  activityData,\n}: IActivityProps): React.FunctionComponentElement<React.ReactNode> {\n  function shiftDate(date: any, numDays: any) {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + numDays);\n    return newDate;\n  }\n  let today = new Date();\n  return (\n    <Grid className='Activity__container' container spacing={1}>\n      <Grid item>\n        <h2>Statistics</h2>\n        <div className='Activity__Statistics__card'>\n          <span>Experiments</span>\n          <strong>{activityData?.num_experiments || 0}</strong>\n        </div>\n        <div className='Activity__Statistics__card'>\n          <span>Runs</span>\n          <strong>{activityData?.num_runs || 0}</strong>\n        </div>\n      </Grid>\n      <Grid xs item>\n        <h2>Activity</h2>\n        <div className='Activity__HeatMap'>\n          <HeatMap\n            startDate={shiftDate(today, -10 * 30)}\n            endDate={today}\n            // onCellClick={searchRuns}\n            data={Object.keys(activityData?.activity_map ?? {}).map((k) => [\n              new Date(k),\n              activityData.activity_map[k],\n            ])}\n          />\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nexport default React.memo(Activity);\n","import React from 'react';\n\nimport ExploreAim from './components/ExploreAim/ExploreAim';\nimport SetupGuide from './components/SetupGuide/SetupGuide';\nimport Activity from './components/Activity/Activity';\nimport { IFrontProps } from 'types/pages/home/Home';\n\nimport './Home.scss';\n\nfunction Home({\n  activityData,\n}: IFrontProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <section className='Home__container'>\n      <div className='Home__Activity__container'>\n        <Activity activityData={activityData} />\n      </div>\n      <div className='Home__Explore__container'>\n        <SetupGuide />\n        <ExploreAim />\n      </div>\n    </section>\n  );\n}\nexport default Home;\n","import createModel from '../model';\nimport projectsService from 'services/api/projects/projectsService';\n\nconst model = createModel<any>({});\n\nfunction getActivityData() {\n  const { call, abort } = projectsService.fetchActivityData();\n  return {\n    call: () =>\n      call().then((data: any) => {\n        model.setState({\n          activityData: data,\n        });\n      }),\n    abort,\n  };\n}\n\nfunction initialize() {\n  model.init();\n}\nconst homeAppModel = {\n  ...model,\n  initialize,\n  getActivityData,\n};\n\nexport default homeAppModel;\n","import React from 'react';\n\nimport Home from './Home';\nimport homeAppModel from 'services/models/home/homeAppModel';\nimport useModel from 'hooks/model/useModel';\n\nfunction HomeContainer(): React.FunctionComponentElement<React.ReactNode> {\n  const activityRequestRef = React.useRef(homeAppModel.getActivityData());\n  const homeData = useModel(homeAppModel);\n\n  React.useEffect(() => {\n    homeAppModel.initialize();\n    activityRequestRef.current.call();\n    return () => {\n      activityRequestRef.current.abort();\n    };\n  }, []);\n\n  return <Home activityData={homeData.activityData} />;\n}\nexport default HomeContainer;\n"],"sourceRoot":""}