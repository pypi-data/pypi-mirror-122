{"version":3,"sources":["config/enums/routesEnum.ts","routes/routes.tsx","assets/logo.svg","components/SideBar/SideBar.tsx","components/ProjectWrapper/ProjectWrapper.tsx","components/Theme/Theme.tsx","App.tsx","components/ErrorBoundary/ErrorBoundary.tsx","reportWebVitals.ts","index.tsx","config/config.ts","services/api/api.ts","services/models/projects/projectsModel.ts","services/api/projects/projectsService.ts","components/Icon/Icon.tsx","hooks/model/useModel.ts","services/models/model.ts"],"names":["PathEnum","Runs","React","lazy","RunDetail","Metrics","Params","Bookmarks","Home","TagsContainer","routes","HOME","path","component","showInSidebar","displayName","RUNS","icon","METRICS","METRICS_ID","Metrics_Id","PARAMS","PARAMS_ID","Params_Id","BOOKMARKS","TAGS","Tags","RUN_DETAIL","Run_Detail","SideBar","className","Drawer","PaperProps","variant","anchor","exact","activeClassName","to","src","logoImg","alt","Object","values","map","route","index","localStorage","getItem","getPathFromStorage","isActive","m","location","pathname","split","includes","Icon","fontSize","name","memo","projectDataRequestRef","projectsModel","getProjectsData","call","ProjectWrapper","projectsData","useModel","useEffect","project","document","title","abort","Provider","createContext","light","typography","fontFamily","overrides","MuiDivider","root","backgroundColor","MuiButton","height","boxShadow","contained","props","MuiButtonBase","disableRipple","palette","type","primary","main","secondary","text","spacing","factor","darkTheme","Theme","useState","dark","setDark","handleTheme","useCallback","theme","createMuiTheme","value","ThemeProvider","children","App","Suspense","fallback","Component","ErrorBoundary","_fallback","state","error","errorInfo","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","API_HOST","window","hostname","port","createAPIRequestWrapper","url","options","stream","controller","AbortController","signal","exceptionHandler","Promise","resolve","reject","fetch","response","a","status","json","body","detail","data","catch","err","API","get","params","URLSearchParams","toString","method","getStream","JSON","stringify","headers","post","put","delete","model","createModel","removeExampleTypes","paramKey","param","hasOwnProperty","projectsService","init","setState","getParamsAndMetrics","metrics","endpoints","GET_PROJECTS","GET_ACTIVITIES","GET_PARAMS_METRICS","fetchActivityData","style","color","rest","getState","initSubscription","subscribe","updateSubscription","unsubscribe","destroy","initialState","subscriptions","INIT","UPDATE","assign","forEach","fn","stateUpdate","evt","push","splice","indexOf"],"mappings":"mGAAKA,E,2CAAAA,K,SAAAA,E,aAAAA,E,mBAAAA,E,6BAAAA,E,iBAAAA,E,2BAAAA,E,aAAAA,E,uBAAAA,E,6BAAAA,M,+HCGCC,EAAOC,IAAMC,MAAK,kBAAM,6EACxBC,EAAYF,IAAMC,MAAK,kBAAM,8EAC7BE,EAAUH,IAAMC,MAAK,kBAAM,4EAC3BG,EAASJ,IAAMC,MAAK,kBAAM,4EAC1BI,EAAYL,IAAMC,MACtB,kBAAM,uEAEFK,EAAON,IAAMC,MAAK,kBAAM,6EACxBM,EAAgBP,IAAMC,MAAK,kBAAM,4EA4ExBO,EA9DA,CACbC,KAAM,CACJC,KAAMZ,IAASQ,KACfK,UAAWL,EACXM,eAAe,EACfC,YAAa,MAEfC,KAAM,CACJJ,KAAMZ,IAASC,KACfY,UAAWZ,EACXa,eAAe,EACfC,YAAa,OACbE,KAAM,QAERC,QAAS,CACPN,KAAMZ,IAASK,QACfQ,UAAWR,EACXS,eAAe,EACfC,YAAa,UACbE,KAAM,WAERE,WAAY,CACVP,KAAMZ,IAASoB,WACfP,UAAWR,EACXS,eAAe,EACfC,YAAa,aAEfM,OAAQ,CACNT,KAAMZ,IAASM,OACfO,UAAWP,EACXQ,eAAe,EACfC,YAAa,SACbE,KAAM,UAERK,UAAW,CACTV,KAAMZ,IAASuB,UACfV,UAAWP,EACXQ,eAAe,EACfC,YAAa,aAEfS,UAAW,CACTZ,KAAMZ,IAASO,UACfM,UAAWN,EACXO,eAAe,EACfC,YAAa,YACbE,KAAM,aAERQ,KAAM,CACJb,KAAMZ,IAAS0B,KACfb,UAAWJ,EACXK,eAAe,EACfC,YAAa,OACbE,KAAM,QAERU,WAAY,CACVf,KAAMZ,IAAS4B,WACff,UAAWT,EACXU,eAAe,EACfC,YAAa,e,iBCnFF,MAA0B,iC,eCazC,SAASc,IAuBP,OACE,qBAAKC,UAAU,qBAAf,SACE,cAACC,EAAA,EAAD,CACEC,WAAY,CAAEF,UAAW,kBACzBG,QAAQ,YACRC,OAAO,OAHT,SAKE,qBAAIJ,UAAU,gBAAd,UACE,cAAC,IAAD,CACEK,OAAO,EACPC,gBAAiB,0BACjBN,UAAU,kBACVO,GAAI3B,EAAOC,KAAKC,KAJlB,SAME,oBAAIkB,UAAU,sBAAd,SACE,qBAAKQ,IAAKC,EAASC,IAAI,aAG1BC,OAAOC,OAAOhC,GAAQiC,KAAI,SAACC,EAAeC,GACzC,IAAQ/B,EAA2C8B,EAA3C9B,cAAeF,EAA4BgC,EAA5BhC,KAAMG,EAAsB6B,EAAtB7B,YAAaE,EAAS2B,EAAT3B,KAC1C,OACEH,GACE,cAAC,IAAD,CAEEuB,GAAI,kBA9CpB,SAA4BO,GAC1B,OAAQA,GACN,KAAK5C,IAASK,QACZ,OAAIyC,aAAaC,QAAQ,cAChBD,aAAaC,QAAQ,eAAiB,GAExCH,EACT,KAAK5C,IAASM,OACZ,OAAIwC,aAAaC,QAAQ,aAChBD,aAAaC,QAAQ,cAAgB,GAEvCH,EACT,KAAK5C,IAASC,KACZ,OAAI6C,aAAaC,QAAQ,WAChBD,aAAaC,QAAQ,YAAc,GAErCH,EACT,QACE,OAAOA,GA4BaI,CAAmBpC,IAC7BuB,OAAO,EACPc,SAAU,SAACC,EAAGC,GAEZ,OADYA,EAASC,SAASC,MAAM,KACvBC,SAAS1C,EAAKyC,MAAM,KAAK,KAExCjB,gBAAiB,0BACjBN,UAAU,kBATZ,SAWE,qBAAIA,UAAU,sBAAd,UACE,cAACyB,EAAA,EAAD,CACEzB,UAAU,4BACV0B,SAAU,GACVC,KAAMxC,IAER,sBAAMa,UAAU,4BAAhB,SACGf,QAjBA8B,aA8BR3C,UAAMwD,KAAK7B,G,gBCnFpB8B,EAAwBC,IAAcC,kBAC5CF,EAAsBG,OAkBPC,MAhBf,WACE,IAAMC,EAAeC,YAA8BL,KAYnD,OAVA1D,IAAMgE,WAAU,WAAO,IAAD,EAKpB,OAJA,OAAIF,QAAJ,IAAIA,GAAJ,UAAIA,EAAcG,eAAlB,aAAI,EAAuBvD,QACzBwD,SAASC,MAAT,eAAyBL,EAAaG,QAAQvD,OAGzC,WACL+C,EAAsBW,WAEvB,CAACN,IAEG,M,0BCXDO,EADoBrE,IAAMsE,cAAc,IACxCD,SAEFE,EAAsB,CAC1BC,WAAY,CACVC,WAAY,6BAEdC,UAAW,CACTC,WAAY,CACVC,KAAM,CACJC,gBAAiB,YAGrBC,UAAW,CACTF,KAAM,CACJG,OAAQ,GACRC,UAAW,SAEbC,UAAW,CACTD,UAAW,WAIjBE,MAAO,CACLC,cAAe,CACbC,eAAe,IAGnBC,QAAS,CACPC,KAAM,QACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,KAAM,CACJH,QAAS,YAGbI,QAAS,SAACC,GAAD,gBAAuBA,EAAvB,QAGLC,EAA0B,CAC9BR,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERE,KAAM,KA6BKI,MAvBf,SACEZ,GAEA,MAAwBlF,IAAM+F,UAAkB,GAAhD,mBAAOC,EAAP,KAAaC,EAAb,KAOMC,EAAclG,IAAMmG,aAAY,WACpCF,GAASD,KACR,CAACA,IAEEI,EAAQC,YAAeL,EAAOH,EAAYtB,GAChD,OACE,cAACF,EAAD,CAAUiC,MAAO,CAAEN,OAAME,eAAzB,SAEE,cAACK,EAAA,EAAD,CAAeH,MAAOA,EAAtB,SAA8BlB,EAAMsB,c,OC5C3BC,MA7Bf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,sBAAK7E,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAM8E,SAAP,CAAgBC,SAAU,KAA1B,SACE,cAAC,IAAD,UACGpE,OAAOC,OAAOhC,GAAQiC,KAAI,SAACC,EAAOC,GACjC,IAAmBiE,EAAoBlE,EAA/B/B,UAAsBD,EAASgC,EAAThC,KAC9B,OACE,cAAC,IAAD,CAAOA,KAAMA,EAAkBuB,OAAK,EAApC,SACE,cAAC2E,EAAD,KADsBjE,uB,gCCc/BkE,E,kDA1Bb,WAAY3B,GAA6B,IAAD,8BACtC,cAAMA,IAHA4B,eAEgC,EAEtC,EAAKC,MAAQ,CACXC,MAAO,MAGT,EAAKF,UAAY,kCAAM5B,EAAMyB,gBAAZ,QAAwB,wDANH,E,qDAaxC,SAAkBK,EAAcC,M,oBAIhC,WACE,OAAIC,KAAKH,MAAMC,MACN,mBAAMF,UAAN,IAGFI,KAAKhC,MAAMsB,Y,uCAbpB,SAAgCQ,GAC9B,MAAO,CAAEA,a,GAhBehH,IAAM4G,WCQnBO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJ5D,SAAS6D,eAAe,SAI1BZ,K,oECfaa,EAA8B,iBAE7BC,OAAOhF,SAASiF,SAFa,YAEDD,OAAOhF,SAASkF,KAFf,QCA3C,SAASC,EACPC,GAGC,IAFDC,EAEA,uDAFuB,GACvBC,EACA,uCACMC,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAE1B,MAAO,CACL9E,KAAM,SAAC+E,GAAD,OACJ,IAAIC,SAAQ,SAACC,EAA2CC,GACtDC,MAAM,GAAD,OAAIf,EAAJ,YAAgBK,GAAhB,YAAC,eAA2BC,GAA5B,IAAqCI,YACvCpB,KADH,uCACQ,WAAO0B,GAAP,iBAAAC,EAAA,oEAEED,EAASE,QAAU,KAFrB,gCAGmBF,EAASG,OAH5B,cAGMC,EAHN,OAKgC,oBAArBT,GACTA,EAAiBS,EAAKC,QANxB,8BAYWd,EAZX,sBAYoBS,EAASI,KAZ7B,yCAY0CJ,EAASG,OAZnD,4BAYIG,EAZJ,KAcFT,EAAQS,GAdN,kDAgB8B,oBAArBX,GACTA,EAAiB,EAAD,IAElBG,EAAO,EAAD,IAnBJ,0DADR,uDAuBGS,OAAM,SAACC,GACW,eAAbA,EAAIjG,OAG0B,oBAArBoF,GACTA,EAAiBa,GAEnBV,EAAOU,WAIjBpF,MAAO,kBAAMoE,EAAWpE,UAgF5B,IAAMqF,EAAM,CACVC,IApDF,SACErB,EACAsB,EACArB,GAEA,OAAOF,EAAuB,UACzBC,GADyB,OACnBsB,EAAS,IAAM,IAAIC,gBAAgBD,GAAQE,WAAa,IADrC,aAG1BC,OAAQ,OACLxB,KA4CPyB,UA9EF,SACE1B,EACAsB,EACArB,GAEA,OAAOF,EAAuB,UACzBC,GADyB,OAEN,UAAb,OAAPC,QAAO,IAAPA,OAAA,EAAAA,EAASwB,QACL,GACAH,EACA,IAAM,IAAIC,gBAAgBD,GAAQE,WAClC,IANsB,yBAS1BC,OAAQ,OACLxB,GACqB,UAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASwB,SAAqB,CAChCV,KAAMY,KAAKC,UAAUN,GACrBO,QAAS,CAAE,eAAgB,uBAG/B,IA0DFC,KAxCF,SACE9B,EACAiB,EACAhB,GAEA,OAAOF,EAA0CC,EAAnB,yBAC5ByB,OAAQ,QACLxB,GAFyB,IAG5B4B,QAAS,CACP,eAAgB,oBAElBd,KAAMY,KAAKC,UAAUX,OA8BvBc,IA1BF,SACE/B,EACAiB,EACAhB,GAEA,OAAOF,EAA0CC,EAAnB,yBAC5ByB,OAAQ,OACLxB,GAFyB,IAG5B4B,QAAS,CACP,eAAgB,oBAElBd,KAAMY,KAAKC,UAAUX,OAgBvBe,OAZF,SAAkChC,EAAaC,GAC7C,OAAOF,EAA0CC,EAAnB,aAC5ByB,OAAQ,UACLxB,MAYQmB,O,2DC/HTa,EAAQC,YAA0C,IAiCxD,SAASC,EAAmBb,GAC1B,IAAK,IAAIc,KAAYd,EAAQ,CAC3B,IAAMe,EAAQf,EAAOc,GACA,kBAAVC,EACLA,EAAMC,eAAe,oBACvBhB,EAAOc,IAAY,EAEnBD,EAAmBE,GAGrBf,EAAOc,IAAY,EAGvB,OAAOd,EAGT,IAAMjG,EAAa,2BACd4G,GADc,IAEjB3G,gBAjDF,WACE,MAAwBiH,IAAgBjH,kBAAhCC,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MAId,OAFAkG,EAAMO,OAEC,CACLjH,KAAM,kBACJA,IAAO0D,MAAK,SAACgC,GACXgB,EAAMQ,SAAS,CACb7G,QAASqF,QAGflF,UAsCF2G,oBAlCF,WACE,MAAwBH,IAAgBG,sBAAhCnH,EAAR,EAAQA,KAER,MAAO,CACLA,KAAM,kBACJA,IAAO0D,MAAK,SAACgC,GACXgB,EAAMQ,SAAS,CACbE,QAAS1B,EAAK0B,QACdrB,OAAQa,EAAmBlB,EAAKK,cAGtCvF,MAVF,EAAcA,UAoCDV,O,gCC/Df,YAOMuH,EAAY,CAChBC,aAAc,WACdC,eAAgB,oBAChBC,mBAAoB,mBAetB,IAAMR,EAAkB,CACtBK,YACAtH,gBAdF,WACE,OAAO8F,IAAIC,IAAcuB,EAAUC,eAcnCG,kBAXF,WACE,OAAO5B,IAAIC,IAAIuB,EAAUE,iBAWzBJ,oBARF,WACE,OAAOtB,IAAIC,IAA2BuB,EAAUG,sBAUnCR,O,oIC3Bf,SAASvH,EAAT,GAOiE,IAN/DE,EAM8D,EAN9DA,KAM8D,IAL9D3B,iBAK8D,MALlD,GAKkD,EAJ9D0J,EAI8D,EAJ9DA,MACAhI,EAG8D,EAH9DA,SACAiI,EAE8D,EAF9DA,MACGC,EAC2D,iBAC9D,OACE,+BACE5J,UAAS,+BAA0B2B,EAA1B,YAAkC3B,GAC3C0J,MAAK,uCACChI,GAAY,CAAEA,SAAUA,IACxBiI,GAAS,CAAEA,UACZD,IAEDE,IAKKxL,QAAMwD,KAAKH,I,4DCFXU,IArBf,SAA6BuG,GAC3B,MAA0BtK,IAAM+F,SAA2BuE,EAAMmB,YAAjE,mBAAO1E,EAAP,KAAc+D,EAAd,KAiBA,OAfA9K,IAAMgE,WAAU,WACd,IAAM0H,EAAmBpB,EAAMqB,UAAU,QAAQ,kBAC/Cb,EAASR,EAAMmB,eAEXG,EAAqBtB,EAAMqB,UAAU,UAAU,kBACnDb,EAASR,EAAMmB,eAGjB,OAAO,WACLC,EAAiBG,cACjBD,EAAmBC,cACnBvB,EAAMwB,aAEP,IAEI/E,I,gCCeMwD,IAlCf,SAAgCwB,GAC9B,IAAIhF,EAA0BgF,EACxBC,EAAkE,CACtEC,KAAM,GACNC,OAAQ,IAEV,MAAO,CAELrB,KAAM,WACJ9D,EAAQxE,OAAO4J,OAAO,GAAIJ,IACzBC,EAAcC,MAAQ,IAAIG,SAAQ,SAACC,GAAD,OAAQA,EAAGN,OAEhDD,QAAS,WACPE,EAAcC,KAAO,GACrBD,EAAcE,OAAS,GACvBnF,EAAQgF,GAEVN,SAAU,kBAAMlJ,OAAO4J,OAAO,GAAIpF,IAClC+D,SAAU,SAACwB,GACTvF,EAAQxE,OAAO4J,OAAOpF,GAASgF,EAAcO,IAC5CN,EAAcE,QAAU,IAAIE,SAAQ,SAACC,GAAD,OAAQA,EAAGC,OAElDX,UAAW,SAACY,EAAwBF,GAGlC,OAFAL,EAAcO,GAAKC,KAAKH,GAEjB,CACLR,YAAa,WACXG,EAAcO,GAAKE,OAAOT,EAAcO,GAAKG,QAAQL,KAAQ,EAAG,S","file":"static/js/main.418bc18b.chunk.js","sourcesContent":["enum PathEnum {\n  Home = '/',\n  Runs = '/runs',\n  Metrics = '/metrics',\n  Metrics_Id = '/metrics/:appId',\n  Params = '/params',\n  Params_Id = '/params/:appId',\n  Tags = '/tags',\n  Bookmarks = '/bookmarks',\n  Run_Detail = '/runs/:runHash',\n}\n\nexport { PathEnum };\n","import React from 'react';\nimport { PathEnum } from '../config/enums/routesEnum';\n\nconst Runs = React.lazy(() => import('pages/Runs/RunsContainer'));\nconst RunDetail = React.lazy(() => import('pages/RunDetail/RunDetail'));\nconst Metrics = React.lazy(() => import('pages/Metrics/MetricsContainer'));\nconst Params = React.lazy(() => import('pages/Params/ParamsContainer'));\nconst Bookmarks = React.lazy(\n  () => import('pages/Bookmarks/BookmarksContainer'),\n);\nconst Home = React.lazy(() => import('pages/Home/HomeContainer'));\nconst TagsContainer = React.lazy(() => import('pages/Tags/TagsContainer'));\n\nexport interface IRoute {\n  path: PathEnum;\n  component:\n    | React.LazyExoticComponent<\n        () => React.FunctionComponentElement<React.ReactNode>\n      >\n    | any;\n  showInSidebar: boolean;\n  displayName: string | null;\n  icon?: string | null;\n}\n\nconst routes = {\n  HOME: {\n    path: PathEnum.Home,\n    component: Home,\n    showInSidebar: false,\n    displayName: null,\n  },\n  RUNS: {\n    path: PathEnum.Runs,\n    component: Runs,\n    showInSidebar: true,\n    displayName: 'Runs',\n    icon: 'runs',\n  },\n  METRICS: {\n    path: PathEnum.Metrics,\n    component: Metrics,\n    showInSidebar: true,\n    displayName: 'Metrics',\n    icon: 'metrics',\n  },\n  METRICS_ID: {\n    path: PathEnum.Metrics_Id,\n    component: Metrics,\n    showInSidebar: false,\n    displayName: 'MetricsId',\n  },\n  PARAMS: {\n    path: PathEnum.Params,\n    component: Params,\n    showInSidebar: true,\n    displayName: 'Params',\n    icon: 'params',\n  },\n  PARAMS_ID: {\n    path: PathEnum.Params_Id,\n    component: Params,\n    showInSidebar: false,\n    displayName: 'MetricsId',\n  },\n  BOOKMARKS: {\n    path: PathEnum.Bookmarks,\n    component: Bookmarks,\n    showInSidebar: true,\n    displayName: 'Bookmarks',\n    icon: 'bookmarks',\n  },\n  TAGS: {\n    path: PathEnum.Tags,\n    component: TagsContainer,\n    showInSidebar: true,\n    displayName: 'Tags',\n    icon: 'tags',\n  },\n  RUN_DETAIL: {\n    path: PathEnum.Run_Detail,\n    component: RunDetail,\n    showInSidebar: false,\n    displayName: 'Run Detail',\n  },\n};\n\nexport default routes;\n","export default __webpack_public_path__ + \"static/media/logo.2baf4ca1.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes, { IRoute } from 'routes/routes';\nimport { Drawer } from '@material-ui/core';\n\nimport { IconName } from 'types/components/Icon/Icon';\nimport Icon from 'components/Icon/Icon';\nimport { PathEnum } from 'config/enums/routesEnum';\n\nimport logoImg from 'assets/logo.svg';\n\nimport './Sidebar.scss';\n\nfunction SideBar(): React.FunctionComponentElement<React.ReactNode> {\n  function getPathFromStorage(route: PathEnum): PathEnum | string {\n    switch (route) {\n      case PathEnum.Metrics:\n        if (localStorage.getItem('metricsUrl')) {\n          return localStorage.getItem('metricsUrl') || '';\n        }\n        return route;\n      case PathEnum.Params:\n        if (localStorage.getItem('paramsUrl')) {\n          return localStorage.getItem('paramsUrl') || '';\n        }\n        return route;\n      case PathEnum.Runs:\n        if (localStorage.getItem('runsUrl')) {\n          return localStorage.getItem('runsUrl') || '';\n        }\n        return route;\n      default:\n        return route;\n    }\n  }\n\n  return (\n    <div className='Sidebar__container'>\n      <Drawer\n        PaperProps={{ className: 'Sidebar__Paper' }}\n        variant='permanent'\n        anchor='left'\n      >\n        <ul className='Sidebar__List'>\n          <NavLink\n            exact={true}\n            activeClassName={'Sidebar__anchor__active'}\n            className='Sidebar__anchor'\n            to={routes.HOME.path}\n          >\n            <li className='Sidebar__List__item'>\n              <img src={logoImg} alt='logo' />\n            </li>\n          </NavLink>\n          {Object.values(routes).map((route: IRoute, index: number) => {\n            const { showInSidebar, path, displayName, icon } = route;\n            return (\n              showInSidebar && (\n                <NavLink\n                  key={index}\n                  to={() => getPathFromStorage(path)}\n                  exact={true}\n                  isActive={(m, location) => {\n                    let split = location.pathname.split('/');\n                    return split.includes(path.split('/')[1]);\n                  }}\n                  activeClassName={'Sidebar__anchor__active'}\n                  className='Sidebar__anchor'\n                >\n                  <li className='Sidebar__List__item'>\n                    <Icon\n                      className='Sidebar__List__item__icon'\n                      fontSize={24}\n                      name={icon as IconName}\n                    />\n                    <span className='Sidebar__List__item__text'>\n                      {displayName}\n                    </span>\n                  </li>\n                </NavLink>\n              )\n            );\n          })}\n        </ul>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default React.memo(SideBar);\n","import React from 'react';\n\nimport projectsModel from 'services/models/projects/projectsModel';\nimport useModel from 'hooks/model/useModel';\nimport { IProjectsModelState } from 'types/services/models/projects/projectsModel';\n\nconst projectDataRequestRef = projectsModel.getProjectsData();\nprojectDataRequestRef.call();\n\nfunction ProjectWrapper() {\n  const projectsData = useModel<IProjectsModelState>(projectsModel);\n\n  React.useEffect(() => {\n    if (projectsData?.project?.path) {\n      document.title = `Aim: ${projectsData.project.path}`;\n    }\n\n    return () => {\n      projectDataRequestRef.abort();\n    };\n  }, [projectsData]);\n\n  return null;\n}\n\nexport default ProjectWrapper;\n","import React from 'react';\nimport {\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  ThemeOptions,\n  ThemeProvider,\n} from '@material-ui/core';\n\nimport { IThemeProps } from 'types/components/Theme/Theme';\n// import useFontSize from 'hooks/fontSize/useFontSize';\n\nexport const ThemeContext = React.createContext({});\nconst { Provider } = ThemeContext;\n\nconst light: ThemeOptions = {\n  typography: {\n    fontFamily: 'Inter Regular, sans-serif',\n  },\n  overrides: {\n    MuiDivider: {\n      root: {\n        backgroundColor: '#E8F1FC',\n      },\n    },\n    MuiButton: {\n      root: {\n        height: 32,\n        boxShadow: 'unset',\n      },\n      contained: {\n        boxShadow: 'unset',\n      },\n    },\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#1473E6',\n    },\n    secondary: {\n      main: '#1c2852',\n    },\n    text: {\n      primary: '#414B6D',\n    },\n  },\n  spacing: (factor: number) => `${factor}em`,\n};\n\nconst darkTheme: ThemeOptions = {\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#64b5f6',\n    },\n    text: {\n      // secondary: '#000',\n    },\n  },\n};\n\nfunction Theme(\n  props: IThemeProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  const [dark, setDark] = React.useState<boolean>(false);\n  // const fontSize = useFontSize();\n  //\n  // React.useEffect(() => {\n  //   document.getElementsByTagName('html')[0].style.fontSize = fontSize + 'px';\n  // }, [fontSize]);\n\n  const handleTheme = React.useCallback((): void => {\n    setDark(!dark);\n  }, [dark]);\n\n  const theme = createMuiTheme(dark ? darkTheme : light);\n  return (\n    <Provider value={{ dark, handleTheme }}>\n      {/* <CssBaseline /> */}\n      <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default Theme;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport SideBar from 'components/SideBar/SideBar';\nimport ProjectWrapper from 'components/ProjectWrapper/ProjectWrapper';\nimport Theme from 'components/Theme/Theme';\nimport routes from 'routes/routes';\n\nimport './App.scss';\n\nfunction App(): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <>\n      <BrowserRouter>\n        <ProjectWrapper />\n        <Theme>\n          <div className='pageContainer'>\n            <SideBar />\n            <div className='mainContainer'>\n              <React.Suspense fallback={null}>\n                <Switch>\n                  {Object.values(routes).map((route, index) => {\n                    const { component: Component, path } = route;\n                    return (\n                      <Route path={path} key={index} exact>\n                        <Component />\n                      </Route>\n                    );\n                  })}\n                </Switch>\n              </React.Suspense>\n            </div>\n          </div>\n        </Theme>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {\n  IErrorBoundaryProps,\n  IErrorBoundaryState,\n} from 'types/components/ErrorBoundary/ErrorBoundary';\n\nclass ErrorBoundary extends React.Component<\n  IErrorBoundaryProps,\n  IErrorBoundaryState\n> {\n  private _fallback: React.FunctionComponent;\n\n  constructor(props: IErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      error: null,\n    };\n\n    this._fallback = () => props.fallback ?? <h1>Something went wrong.</h1>;\n  }\n\n  static getDerivedStateFromError(error: Error): IErrorBoundaryState {\n    return { error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    // Log error to reporting servie\n  }\n\n  render(): React.ReactNode {\n    if (this.state.error) {\n      return <this._fallback />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// TODO: pass a function to log performance measurement results\nreportWebVitals();\n","export const isDEVModeOn: boolean = process.env.NODE_ENV === 'development';\n\nexport const API_HOST: string = isDEVModeOn\n  ? 'http://127.0.0.1:43800/api'\n  : `http://${window.location.hostname}:${window.location.port}/api`;\n","import { API_HOST } from 'config/config';\n\nfunction createAPIRequestWrapper<ResponseDataType>(\n  url: string,\n  options: RequestInit = {},\n  stream?: boolean,\n) {\n  const controller = new AbortController();\n  const signal = controller.signal;\n\n  return {\n    call: (exceptionHandler?: (error: ResponseDataType) => any) =>\n      new Promise((resolve: (data: ResponseDataType) => void, reject) => {\n        fetch(`${API_HOST}/${url}`, { ...options, signal })\n          .then(async (response) => {\n            try {\n              if (response.status >= 400) {\n                const body = await response.json();\n\n                if (typeof exceptionHandler === 'function') {\n                  exceptionHandler(body.detail);\n                }\n\n                // return reject(body.detail); @TODO delete comment, after handling\n                return;\n              }\n              const data = stream ? response.body : await response.json();\n\n              resolve(data);\n            } catch (err) {\n              if (typeof exceptionHandler === 'function') {\n                exceptionHandler(err);\n              }\n              reject(err);\n            }\n          })\n          .catch((err) => {\n            if (err.name === 'AbortError') {\n              // Fetch aborted\n            } else {\n              if (typeof exceptionHandler === 'function') {\n                exceptionHandler(err);\n              }\n              reject(err);\n            }\n          });\n      }),\n    abort: () => controller.abort(),\n  };\n}\n\nfunction getStream<ResponseDataType>(\n  url: string,\n  params?: {},\n  options?: RequestInit,\n) {\n  return createAPIRequestWrapper<ResponseDataType>(\n    `${url}${\n      options?.method === 'POST'\n        ? ''\n        : params\n        ? '?' + new URLSearchParams(params).toString()\n        : ''\n    }`,\n    {\n      method: 'GET',\n      ...options,\n      ...(options?.method === 'POST' && {\n        body: JSON.stringify(params),\n        headers: { 'Content-Type': 'application/json' },\n      }),\n    },\n    true,\n  );\n}\n\nfunction get<ResponseDataType>(\n  url: string,\n  params?: {},\n  options?: RequestInit,\n) {\n  return createAPIRequestWrapper<ResponseDataType>(\n    `${url}${params ? '?' + new URLSearchParams(params).toString() : ''}`,\n    {\n      method: 'GET',\n      ...options,\n    },\n  );\n}\n\nfunction post<ResponseDataType>(\n  url: string,\n  data: object,\n  options?: RequestInit,\n) {\n  return createAPIRequestWrapper<ResponseDataType>(url, {\n    method: 'POST',\n    ...options,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n}\n\nfunction put<ResponseDataType>(\n  url: string,\n  data: object,\n  options?: RequestInit,\n) {\n  return createAPIRequestWrapper<ResponseDataType>(url, {\n    method: 'PUT',\n    ...options,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n}\n\nfunction remove<ResponseDataType>(url: string, options?: RequestInit) {\n  return createAPIRequestWrapper<ResponseDataType>(url, {\n    method: 'DELETE',\n    ...options,\n  });\n}\n\nconst API = {\n  get,\n  getStream,\n  post,\n  put,\n  delete: remove,\n};\n\nexport default API;\n","import projectsService from 'services/api/projects/projectsService';\nimport {\n  IProject,\n  IProjectParamsMetrics,\n  IProjectsModelState,\n} from 'types/services/models/projects/projectsModel';\nimport createModel from 'services/models/model';\n\nconst model = createModel<Partial<IProjectsModelState>>({});\n\nfunction getProjectsData() {\n  const { call, abort } = projectsService.getProjectsData();\n\n  model.init();\n\n  return {\n    call: () =>\n      call().then((data: IProject) => {\n        model.setState({\n          project: data,\n        });\n      }),\n    abort,\n  };\n}\n\nfunction getParamsAndMetrics() {\n  const { call, abort } = projectsService.getParamsAndMetrics();\n\n  return {\n    call: () =>\n      call().then((data: IProjectParamsMetrics) => {\n        model.setState({\n          metrics: data.metrics,\n          params: removeExampleTypes(data.params),\n        });\n      }),\n    abort,\n  };\n}\n\nfunction removeExampleTypes(params: IProjectParamsMetrics['params']) {\n  for (let paramKey in params) {\n    const param = params[paramKey];\n    if (typeof param === 'object') {\n      if (param.hasOwnProperty('__example_type__')) {\n        params[paramKey] = true;\n      } else {\n        removeExampleTypes(param);\n      }\n    } else {\n      params[paramKey] = true;\n    }\n  }\n  return params;\n}\n\nconst projectsModel = {\n  ...model,\n  getProjectsData,\n  getParamsAndMetrics,\n};\n\nexport default projectsModel;\n","import API from '../api';\nimport {\n  IProject,\n  IProjectParamsMetrics,\n} from 'types/services/models/projects/projectsModel';\nimport { IApiRequest } from 'types/services/services';\n\nconst endpoints = {\n  GET_PROJECTS: 'projects',\n  GET_ACTIVITIES: 'projects/activity',\n  GET_PARAMS_METRICS: 'projects/params',\n};\n\nfunction getProjectsData(): IApiRequest<IProject> {\n  return API.get<IProject>(endpoints.GET_PROJECTS);\n}\n\nfunction fetchActivityData(): IApiRequest<any> {\n  return API.get(endpoints.GET_ACTIVITIES);\n}\n\nfunction getParamsAndMetrics(): IApiRequest<IProjectParamsMetrics> {\n  return API.get<IProjectParamsMetrics>(endpoints.GET_PARAMS_METRICS);\n}\n\nconst projectsService = {\n  endpoints,\n  getProjectsData,\n  fetchActivityData,\n  getParamsAndMetrics,\n};\n\nexport default projectsService;\n","import React from 'react';\nimport { IIconProps } from 'types/components/Icon/Icon';\n\nimport './Icon.scss';\n\nfunction Icon({\n  name,\n  className = '',\n  style,\n  fontSize,\n  color,\n  ...rest\n}: IIconProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <i\n      className={`Icon__container icon-${name} ${className}`}\n      style={{\n        ...(fontSize && { fontSize: fontSize }),\n        ...(color && { color }),\n        ...style,\n      }}\n      {...rest}\n    />\n  );\n}\n\nexport default React.memo(Icon);\n","import React from 'react';\nimport { IModel } from 'types/services/models/model';\n\nfunction useModel<StateType>(model: IModel<StateType>): StateType | null {\n  const [state, setState] = React.useState<StateType | null>(model.getState());\n\n  React.useEffect(() => {\n    const initSubscription = model.subscribe('INIT', () =>\n      setState(model.getState()),\n    );\n    const updateSubscription = model.subscribe('UPDATE', () =>\n      setState(model.getState()),\n    );\n\n    return () => {\n      initSubscription.unsubscribe();\n      updateSubscription.unsubscribe();\n      model.destroy();\n    };\n  }, []);\n\n  return state;\n}\n\nexport default useModel;\n","import { IModel } from 'types/services/models/model';\n\nfunction createModel<StateType>(initialState: StateType): IModel<StateType> {\n  let state: StateType | null = initialState;\n  const subscriptions: { [key: string]: { (data: StateType): void }[] } = {\n    INIT: [],\n    UPDATE: [],\n  };\n  return {\n    // @TODO think to change model structure and remove init step from model lifecycle\n    init: () => {\n      state = Object.assign({}, initialState);\n      (subscriptions.INIT || []).forEach((fn) => fn(initialState));\n    },\n    destroy: () => {\n      subscriptions.INIT = [];\n      subscriptions.UPDATE = [];\n      state = initialState;\n    },\n    getState: () => Object.assign({}, state),\n    setState: (stateUpdate: StateType) => {\n      state = Object.assign(state || initialState, stateUpdate);\n      (subscriptions.UPDATE || []).forEach((fn) => fn(stateUpdate));\n    },\n    subscribe: (evt: 'INIT' | 'UPDATE', fn: (data: StateType) => void) => {\n      subscriptions[evt].push(fn);\n\n      return {\n        unsubscribe: () => {\n          subscriptions[evt].splice(subscriptions[evt].indexOf(fn) >>> 0, 1);\n        },\n      };\n    },\n  };\n}\n\nexport default createModel;\n"],"sourceRoot":""}