{"version":3,"sources":["components/form-with-validation/form-with-validation.component.jsx","components/form-input/form-input.component.jsx","components/custom-button/custom-button.component.jsx","components/spinner/spinner.component.jsx","lib/Api.js","components/sign-in/sign-in.component.jsx","App.js","index.js"],"names":["FormWithValidationAndSpinner","children","className","onSubmit","isValidForm","submitHandler","e","a","preventDefault","autoComplete","FormInput","props","state","show","inputRef","React","createRef","showToggle","bind","this","name","setState","onChange","label","shrink","showHideFlag","error","type","value","inputFocused","otherProps","ref","onClick","Component","CustomButton","inverse","Spinner","statusCodes","GET","POST","PUT","DELETE","Api","route","xhr","params","host","verb","externalHost","url","options","Object","assign","method","body","JSON","stringify","headers","fetch","then","resp","json","status","includes","err","schema","Joi","object","keys","username","string","max","required","messages","password","SignIn","headerText","loginEndpoint","logo","prefix","useState","setUsername","setPassword","loading","setLoading","errorMessage","setErrorMessage","isDirtyForm","setIsDirtyForm","fieldErrorMessages","setFieldErrorMessages","useEffect","Streamlit","setFrameHeight","validateForm","getFieldErrorMessage","fieldName","field","find","fi","message","changeHandler","undefined","changeProp","target","isValid","valueSet","validate","abortEarly","details","length","map","context","key","handleSubmit","event","loginBody","post","res","setComponentValue","token","catch","console","log","alt","src","maxLength","disabled","App","render","args","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74c711e3.chunk.js","sourcesContent":["import React from 'react'\n\nconst FormWithValidationAndSpinner = ({ children, className, onSubmit, isValidForm }) => {\n  const submitHandler = async (e) => {\n    e.preventDefault()\n    const isValid = await isValidForm()\n    if (isValid)Â {\n      onSubmit(e)\n    }\n  }\n\n  return (\n    <form className={className} onSubmit={submitHandler} autoComplete=\"off\">\n      { children }\n    </form>\n  )\n}\n\nexport default FormWithValidationAndSpinner","import React from 'react';\n\nimport './form-input.styles.scss';\n\nclass FormInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    }\n    this.inputRef = React.createRef();\n    this.showToggle = this.showToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const { name } = this.props;\n  }\n\n  showToggle() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  render() {\n    const {\n      onChange, label, shrink, showHideFlag, error, type, name,\n      value, inputFocused,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <div className='group'>\n        <input\n          ref={this.inputRef}\n          className={`form-input\n            ${error ? 'isError' : ''}\n            ${inputFocused === name ? 'keyboardfocus' : ''}\n          `}\n          onChange={onChange}\n          name={name}\n          value={value}\n          // onFocus={() => setFocus(name)}\n          type={\n            showHideFlag\n              ? this.state.show\n                ? 'password'\n                : 'input'\n              : type\n            }\n          {...otherProps}\n        />\n        {\n          label\n            ? (<label className={`${shrink ? 'shrink' : ''} form-input-label`}>\n                 {label}\n              </label>)\n            : null\n        }\n        {\n          label\n            ? (<label className='form-input-label error-message' >\n                 { error }\n              </label>)\n            : null\n        }\n        {\n          showHideFlag\n            ? (<label className={`form-input-label-show`} onClick={this.showToggle}>\n                { this.state.show\n                  ? 'Show'\n                  : 'Hide'\n                }\n              </label>)\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default FormInput;","import React from 'react';\n\nimport './custom-button.styles.scss';\n\nconst CustomButton = ({children, inverse, ...props}) => (\n  <button \n    className={`custom-button ${inverse ? 'custom-button-inverse' : ''}`} \n    {...props}\n  >\n    {children}\n  </button>\n);\n\nexport default CustomButton;","import React from 'react';\n\nimport './spinner.styles.scss';\n\nexport const SpinnerOverlay = () => (\n  <div className='spinner-overlay'>\n    <div className='spinner-container' />\n  </div>\n);\n\nexport const Spinner = () => (\n  <div className='spinner-auto'>\n    <div className='spinner-container small' />\n  </div>\n);\n\n","const statusCodes = {\n  GET:      [200],\n  POST:     [200, 201],\n  PUT:      [200],\n  DELETE:   [200, 204],\n  // OPTIONS:  [httpStatus.OK, httpStatus.NO_CONTENT]\n}\n\nclass Api {\n  static headers() {\n    return {\n      'Content-Type': 'application/json',\n    }\n  }\n\n  static async get(route) {\n    return this.xhr(route, null, 'GET');\n  }\n\n  static async put(route, params) {\n    return this.xhr(route, params, 'PUT');\n  }\n\n  static async post(route, params, host) {\n    return this.xhr(route, params, 'POST', host);\n  }\n\n  static async delete(route, params) {\n    return this.xhr(route, params, 'DELETE');\n  }\n\n  static async xhr(route, params, verb, externalHost) {\n    const host = externalHost;\n    const url = `${host}${route}`;\n    let options = Object.assign({ method: verb }, params ? { body: JSON.stringify(params) } : null );\n    options.headers = Api.headers();\n    return fetch(url, options).then( resp => {\n      let json = resp.status !== 204 ? resp.json() : {}\n      const expectedCode = statusCodes[verb];\n      if (expectedCode.includes(resp.status)) {\n        return json;\n      }\n      return json.then(err => {throw err});\n    });\n  }\n}\nexport default Api\n","import React, { useState, useEffect } from 'react';\nimport { Streamlit } from \"streamlit-component-lib\"\n\nimport FormWithValidation from '../../components/form-with-validation/form-with-validation.component';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {Â Spinner } from '../spinner/spinner.component';\n// import logo from '../../assets/images/logo-intercement.png';\n\nimport Joi from 'joi';\n\nimport Api from '../../lib/Api'\n\n// import ActiveDirectory from 'activedirectory';\nimport './sign-in.styles.scss';\n\n// Define the schema to validate the form\nconst schema = Joi.object().keys({\n  username: Joi.string().max(15)\n    .required()\n    .messages({\n      'string.empty': `Username is not allowed to be empty`,\n      'string.max': `Username should have a maximum length of {#limit}`,\n      'any.required': `Username is a required field`\n    }),\n    password: Joi.string().required().max(15).messages({\n      'string.empty': `Password is not allowed to be empty`,\n      'string.max': `Password should have a maximum length of {#limit}`,\n      'any.required': `Password is a required field`\n  })\n})\n\nconst SignIn = ({ headerText, loginEndpoint, logo, prefix}) => {\n  const [username, setUsername] = useState()\n  const [password, setPassword] = useState()\n  const [loading, setLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n  const [isDirtyForm, setIsDirtyForm] = useState(false)\n  const [fieldErrorMessages, setFieldErrorMessages] = useState()\n\n  useEffect(() => {\n    Streamlit.setFrameHeight(600)\n  }, [])\n\n  useEffect(() => {\n    if (isDirtyForm) {\n      validateForm()\n    }\n  }, [username, password])\n\n  const changeProp = (name, value) => {\n    setErrorMessage(undefined)\n\n    switch (name) {\n      case 'username':\n        setUsername(value)\n        break\n      case 'password':\n        setPassword(value)\n        break\n    }\n  }\n\n  const getFieldErrorMessage = (fieldName) => {\n    if (!isDirtyForm) return undefined\n\n    const field = fieldErrorMessages?.find(fi => fi.field === fieldName)\n    return field?.message\n  }\n\n  const changeHandler = (fieldName, e) => {\n    changeProp(fieldName, e.target.value)\n  }\n\n  const validateForm = () => {\n    setIsDirtyForm(true)\n    let isValid = false\n    let fieldErrorMessages = []\n\n    const valueSet = {\n      username,\n      password\n    }\n\n    const validationOptions = {\n      abortEarly: false   // Validate all fields, not abort in the first error\n    }\n    const { error } = schema.validate(valueSet, validationOptions)\n\n    if (error && error?.details?.length > 0) {\n      error.details.map((error) => {\n        const field = error.context.key\n        fieldErrorMessages = [...fieldErrorMessages, { field, message: error.message }]\n      })\n      setFieldErrorMessages(fieldErrorMessages)\n    } else {\n      isValid = true\n      setFieldErrorMessages(undefined)\n    }\n\n    return isValid\n  }\n\n  const isValidForm = async () => {\n    return await validateForm()\n  }\n\n  const handleSubmit = async (event) => {\n    setLoading(true)\n\n    const loginBody = {\n      name: `${prefix ? `${prefix}\\\\` : ''}${username}`,\n      password\n    }\n\n    try {\n      return Api.post(`/login`, loginBody, loginEndpoint)\n        .then(res => {\n          Streamlit.setComponentValue(res?.token)\n          return res && res.token\n            ? res.token\n            : undefined\n        })\n        .catch(error => {\n          setErrorMessage(error ? error?.message : 'Something was wrong')\n          return undefined\n        });\n    } catch (err) {\n      console.log('error', err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className='sign-in-container'>\n      <div className='logo-contanier'>\n        <img className='logo-image' alt='' src={logo} />\n      </div>\n      { headerText &&\n        <p className='welcome-message'>\n          { headerText }\n        </p>\n      }\n      <div className='form-container'>\n        <FormWithValidation\n          onSubmit={handleSubmit}\n          isValidForm={isValidForm}\n        >\n          <FormInput\n            type='text'\n            name='username'\n            onChange={(e) => changeHandler('username', e)}\n            label='Usuario'\n            maxLength='30'\n            error={getFieldErrorMessage('username')}\n            disabled={loading}\n            shrink\n          />\n          <FormInput\n            type='password'\n            name='password'\n            onChange={(e) => changeHandler('password', e)}\n            label='Password'\n            maxLength='30'\n            error={getFieldErrorMessage('password')}\n            disabled={loading}\n            shrink\n            showHideFlag\n          />\n          { errorMessage && errorMessage !== '' &&\n            <div className='error-message'>{ errorMessage }</div>\n          }\n          <div className='footer-container'>\n            <CustomButton type='submit' disabled={loading}>\n              { !loading ? 'Login' : <Spinner /> }\n            </CustomButton>\n          </div>\n        </FormWithValidation>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn;","import React from 'react';\nimport {\n  StreamlitComponentBase,\n  withStreamlitConnection\n} from \"streamlit-component-lib\";\nimport SignIn from './components/sign-in/sign-in.component'\n\nimport './App.scss'\n\nclass App extends StreamlitComponentBase {\n  render = () => {\n      const headerText =  this.props.args['headerText'];\n      const logo = this.props.args['logo']\n      const loginEndpoint = this.props.args['AD_URL']\n      const prefix = this.props.args['prefix']\n\n      if (!loginEndpoint || loginEndpoint === '') return null\n\n      return (\n        <div className=\"App\">\n          <SignIn headerText={headerText} loginEndpoint={loginEndpoint} logo={logo} prefix={prefix} />\n        </div>\n      )\n  }\n}\n\nexport default withStreamlitConnection(App)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}