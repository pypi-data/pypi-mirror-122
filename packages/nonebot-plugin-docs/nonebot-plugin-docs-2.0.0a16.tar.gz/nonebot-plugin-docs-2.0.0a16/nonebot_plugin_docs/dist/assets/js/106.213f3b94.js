(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{580:function(s,t,a){"use strict";a.r(t);var n=a(21),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"权限控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限控制"}},[s._v("#")]),s._v(" 权限控制")]),s._v(" "),a("p",[a("strong",[s._v("权限控制")]),s._v("是机器人在实际应用中需要解决的重点问题之一，"),a("code",[s._v("Nonebot")]),s._v(" 提供了十分完善且灵活的权限控制机制—— "),a("code",[s._v("Permission")]),s._v(" 机制。接下来我们将对这个机制进行简单的说明。")]),s._v(" "),a("h2",{attrs:{id:"应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[s._v("#")]),s._v(" 应用")]),s._v(" "),a("p",[s._v("如同 "),a("code",[s._v("Rule")]),s._v(" 一样, "),a("code",[s._v("Permission")]),s._v(" 可以在"),a("a",{attrs:{href:"../guide/creating-a-matcher"}},[s._v("注册事件响应器")]),s._v("时添加 "),a("code",[s._v("permission")]),s._v(" 参数来加以应用，这样 "),a("code",[s._v("Nonebot")]),s._v(" 会在事件响应时检测事件主体的权限。下面我们以 "),a("code",[s._v("SUPERUSER")]),s._v(" 为例，对该机制的应用做一下介绍。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("permission "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" SUPERUSER\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("adapters "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Bot\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" on_command\n\nmatcher "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" on_command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"测试超管"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" permission"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("SUPERUSER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"超管命令测试成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("got")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"超管提问"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"超管命令got成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("在这段代码中，我们事件响应器指定了 "),a("code",[s._v("SUPERUSER")]),s._v(" 这样一个权限，那么机器人只会响应超级管理员的 "),a("code",[s._v("测试超管")]),s._v(" 命令，并且会响应该超级管理员的连续对话。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("在这里需要强调的是，"),a("code",[s._v("Permission")]),s._v(" 与 "),a("code",[s._v("Rule")]),s._v(" 的表现并不相同， "),a("code",[s._v("Rule")]),s._v(" 只会在初次响应时生效，在余下的对话中并没有限制事件；但是 "),a("code",[s._v("Permission")]),s._v(" 会持续生效，在连续对话中会一直对事件主体加以限制。")])]),s._v(" "),a("h2",{attrs:{id:"进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[s._v("#")]),s._v(" 进阶")]),s._v(" "),a("p",[a("code",[s._v("Permission")]),s._v(" 除了可以在注册事件响应器时加以应用，还可以在编写事件处理函数 "),a("code",[s._v("handler")]),s._v(" 时主动调用，我们可以利用这个特性在一个 "),a("code",[s._v("handler")]),s._v(" 里对不同权限的事件主体进行区别响应，下面我们以 "),a("code",[s._v("CQHTTP")]),s._v(" 中的 "),a("code",[s._v("GROUP_ADMIN")]),s._v(" (普通管理员非群主)和 "),a("code",[s._v("GROUP_OWNER")]),s._v(" 为例，说明下怎么进行主动调用。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" on_command\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("adapters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cqhttp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Bot\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("adapters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cqhttp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" GroupMessageEvent\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("adapters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cqhttp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" GROUP_ADMIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GROUP_OWNER\n\nmatcher "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" on_command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"测试权限"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("handle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" GroupMessageEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" GROUP_ADMIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"管理员测试成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" GROUP_OWNER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"群主测试成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"群员测试成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("在这段代码里，我们并没有对命令的权限指定，这个命令会响应所有在群聊中的 "),a("code",[s._v("测试权限")]),s._v(" 命令，但是在 "),a("code",[s._v("handler")]),s._v(" 里，我们对两个 "),a("code",[s._v("Permission")]),s._v(" 进行主动调用，从而可以对不同的角色进行不同的响应。")]),s._v(" "),a("h2",{attrs:{id:"自定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义"}},[s._v("#")]),s._v(" 自定义")]),s._v(" "),a("p",[s._v("如同 "),a("code",[s._v("Rule")]),s._v(" 一样, "),a("code",[s._v("Permission")]),s._v(" 也是由非负数个 "),a("code",[s._v("PermissionChecker")]),s._v(" 组成的，但只需其中一个返回 "),a("code",[s._v("True")]),s._v(" 时就会匹配成功。下面则是 "),a("code",[s._v("PermissionChecker")]),s._v(" 和 "),a("code",[s._v("Permission")]),s._v(" 示例：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("adapters "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Event\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("permission "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Permission\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("async_checker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync_checker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("check")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("_checker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" arg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" Permission"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_checker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[a("code",[s._v("Permission")]),s._v(" 和 "),a("code",[s._v("PermissionChecker")]),s._v(" 之间可以使用 "),a("code",[s._v("或 |")]),s._v(" 互相组合：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("permission "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Permission\n\nPermission"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("async_checker1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sync_checker "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" async_checker2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("同样地，如果想用 "),a("code",[s._v("Permission(*checkers)")]),s._v(" 包裹构造 "),a("code",[s._v("Permission")]),s._v(" ，函数必须是异步的；但是在利用 "),a("code",[s._v("或 |")]),s._v(" 符号连接构造时， "),a("code",[s._v("Nonebot")]),s._v(" 会自动包裹同步函数为异步函数。")])])}),[],!1,null,null,null);t.default=e.exports}}]);