{"version":3,"sources":["TooltipSelect.tsx","index.tsx"],"names":["TooltipSelect","props","render","args","body","labels","makeTooltip","state","data-for","data-event","data-tip","onMouseUp","text","window","getSelection","toString","setState","selectedIndex","undefined","selectedText","length","id","place","globalEventOff","clickable","this","map","index","type","className","checked","onChange","Streamlit","setComponentValue","htmlFor","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"4OAcMA,E,kDACJ,WAAYC,GAAwB,IAAD,8BACjC,cAAMA,IAIDC,OAAS,WAAkB,IAAD,EACN,EAAKD,MAAME,KAA5BC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,OACd,OAAO,EAAKC,YAAYF,EAAMC,IAL9B,EAAKE,MAAQ,GAFoB,E,+CAUnC,SAAoBH,EAAcC,GAAmB,IAAD,OAClD,OACE,qCACE,qBACEG,WAAS,iBACTC,aAAW,cACXC,WAAS,GACTC,UAAW,WAAO,IAAD,EACTC,EAAI,UAAGC,OAAOC,sBAAV,aAAG,EAAuBC,WACpC,EAAKC,SAAS,CACZC,mBAAeC,EACfC,cAAkB,OAAJP,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,QAASR,OAAOM,KAR1C,SAYGd,IAEH,cAAC,IAAD,CACEiB,GAAG,iBACHC,MAAM,QACNC,eAAe,YACfC,WAAS,EAJX,SAMGC,KAAKlB,MAAMY,aACRd,EAAOqB,KAAI,SAACd,EAAMe,GAAP,OACT,qCACE,uBACEC,KAAK,WACLP,GAAE,eAAUM,GACZE,UAAU,YACVC,QAAS,EAAKvB,MAAMU,gBAAkBU,EACtCI,SAAU,kBACR,EAAKf,SACH,CACEC,cACE,EAAKV,MAAMU,gBAAkBU,OACzBT,EACAS,IAER,WACEK,IAAUC,kBAAkB,CAC1B,EAAK1B,MAAMY,aACX,EAAKZ,MAAMU,sBAMrB,uBAAOiB,QAAO,eAAUP,GAASE,UAAU,QAA3C,SACGjB,IAEH,6BAGJ,c,GAjEcuB,KA6EbC,cAAwBpC,GCvFvCqC,IAASnC,OACP,cAAC,IAAMoC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d35de175.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\"\nimport ReactTooltip from \"react-tooltip\"\nimport {\n  ComponentProps,\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\ninterface State {\n  selectedText?: string\n  selectedIndex?: number\n}\n\nclass TooltipSelect extends StreamlitComponentBase<State> {\n  constructor(props: ComponentProps) {\n    super(props)\n    this.state = {}\n  }\n\n  public render = (): ReactNode => {\n    const { body, labels } = this.props.args\n    return this.makeTooltip(body, labels)\n  }\n\n  private makeTooltip(body: string, labels: string[]) {\n    return (\n      <>\n        <div\n          data-for=\"tooltip-select\"\n          data-event=\"click focus\"\n          data-tip=\"\"\n          onMouseUp={() => {\n            const text = window.getSelection()?.toString()\n            this.setState({\n              selectedIndex: undefined,\n              selectedText: text?.length ? text : undefined,\n            })\n          }}\n        >\n          {body}\n        </div>\n        <ReactTooltip\n          id=\"tooltip-select\"\n          place=\"right\"\n          globalEventOff=\"mousedown\"\n          clickable\n        >\n          {this.state.selectedText\n            ? labels.map((text, index) => (\n                <>\n                  <input\n                    type=\"checkbox\"\n                    id={`item-${index}`}\n                    className=\"icon done\"\n                    checked={this.state.selectedIndex === index}\n                    onChange={() =>\n                      this.setState(\n                        {\n                          selectedIndex:\n                            this.state.selectedIndex === index\n                              ? undefined\n                              : index,\n                        },\n                        () => {\n                          Streamlit.setComponentValue([\n                            this.state.selectedText,\n                            this.state.selectedIndex,\n                          ])\n                        }\n                      )\n                    }\n                  />\n                  <label htmlFor={`item-${index}`} className=\"label\">\n                    {text}\n                  </label>\n                  <br />\n                </>\n              ))\n            : null}\n        </ReactTooltip>\n      </>\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(TooltipSelect)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TooltipSelect from \"./TooltipSelect\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <TooltipSelect />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}