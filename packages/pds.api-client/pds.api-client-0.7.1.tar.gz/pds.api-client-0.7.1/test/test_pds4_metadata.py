# coding: utf-8

"""
    Planetary Data System API

    Federated PDS API which provides actionable end points standardized between the different nodes.   # noqa: E501

    The version of the OpenAPI document: main
    Contact: pds-operator@jpl.nasa.gov
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pds.api_client
from pds.api_client.models.pds4_metadata import Pds4Metadata  # noqa: E501
from pds.api_client.rest import ApiException

class TestPds4Metadata(unittest.TestCase):
    """Pds4Metadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Pds4Metadata
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pds.api_client.models.pds4_metadata.Pds4Metadata()  # noqa: E501
        if include_optional :
            return Pds4Metadata(
                node_name = '', 
                label_file = pds.api_client.models.pds4_metadata_label_file.pds4Metadata_label_file(
                    file_name = '', 
                    file_ref = '', 
                    creation_date = '', 
                    file_size = '', 
                    md5_checksum = '', ), 
                data_files = [
                    pds.api_client.models.pds4_metadata_data_files.pds4Metadata_data_files(
                        file_name = '', 
                        file_ref = '', 
                        creation_date = '', 
                        file_size = '', 
                        md5_checksum = '', 
                        mime_type = '', )
                    ]
            )
        else :
            return Pds4Metadata(
        )

    def testPds4Metadata(self):
        """Test Pds4Metadata"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
