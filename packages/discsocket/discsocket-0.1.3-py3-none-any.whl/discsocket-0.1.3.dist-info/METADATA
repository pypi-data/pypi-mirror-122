Metadata-Version: 2.1
Name: discsocket
Version: 0.1.3
Summary: Python framework for Discord interactions.
Home-page: https://github.com/murillotadeo/discsocket
Author: Tadeo Murillo
License: MIT
Project-URL: Issue tracker, https://github.com/murillotadeo/discsocket/issues
Project-URL: Source, https://github.com/murillotadeo/discsocket
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.8.0
Description-Content-Type: text/markdown
Requires-Dist: aiohttp (<3.8.0,>=3.6.0)

# discsocket

Python framework for Discord interactions.

# Installation
`pip install discsocket`

# Introduction
This is the code needed for a minimal application with an on_ready event
```py
import discsocket

client = discsocket.Client()

# Event names go in the event decorator
# The function can be named whatever
@socket.event('on_ready')
async def ready():
  print(f"{client.user.username} is connected")

client.run('token')
```
# Extensions (Cogs)
If you're familiar with discord.py then you know about cogs. However in discsockets extensions don't inherit from a cog class.

```py
import discsocket

@discsocket.command('boop', 1)
async def boop_command(ctx):
    await ctx.callback('https://tenor.com/view/boop-gif-18601298')

```
Lets pretend that the file is called boop.py and is in a folder called extensions

```py
# It would be loaded into the client like this
client.add_extension('extensions.boop')
```


